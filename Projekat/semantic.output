Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function
    4              | function_list global_variable

    5 global_variable: _TYPE _ID _SEMICOLON

    6 $@1: %empty

    7 function: _TYPE _ID $@1 _LPAREN sabezParametara _RPAREN body

    8 sabezParametara: %empty
    9                | parameters

   10 parameters: parameter
   11           | parameters _COMMA parameter

   12 parameter: _TYPE _ID

   13 $@2: %empty

   14 body: _LBRACKET $@2 variable_list statement_list _RBRACKET

   15 variable_list: %empty
   16              | variable_list variable

   17 $@3: %empty

   18 variable: _TYPE $@3 vars _SEMICOLON

   19 vars: _ID
   20     | vars _COMMA _ID

   21 statement_list: %empty
   22               | statement_list statement

   23 statement: compound_statement
   24          | assignment_statement
   25          | if_statement
   26          | return_statement
   27          | postincrement_statement
   28          | while_statement
   29          | loop_statement
   30          | branch_statement
   31          | function_statement
   32          | select_statement

   33 $@4: %empty

   34 select_statement: _SELECT multi_vars _FROM _ID $@4 _WHERE _LPAREN logic_rel_exp _RPAREN _SEMICOLON

   35 multi_vars: _ID
   36           | multi_vars _COMMA _ID

   37 $@5: %empty

   38 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@5 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

   39 $@6: %empty

   40 loop_statement: _LOOP _LPAREN _ID _COMMA literal _COMMA literal _COMMA literal _RPAREN $@6 statement

   41 postincrement_statement: _ID _POSTINCREMENT _SEMICOLON

   42 $@7: %empty

   43 compound_statement: _LBRACKET $@7 variable_list statement_list _RBRACKET

   44 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   45 num_exp: exp
   46        | num_exp _AROP exp

   47 exp: literal
   48    | _ID
   49    | function_call
   50    | _LPAREN num_exp _RPAREN
   51    | _ID _POSTINCREMENT

   52 literal: _INT_NUMBER
   53        | _UINT_NUMBER

   54 function_statement: function_call _SEMICOLON

   55 $@8: %empty

   56 function_call: _ID $@8 _LPAREN argument _RPAREN

   57 argument: %empty
   58         | num_exp
   59         | argument _COMMA num_exp

   60 if_statement: if_part
   61             | if_part _ELSE statement

   62 if_part: _IF _LPAREN logic_rel_exp _RPAREN statement

   63 logic_rel_exp: rel_exp
   64              | logic_rel_exp _LOGICOPER rel_exp

   65 rel_exp: num_exp _RELOP num_exp

   66 while_statement: _WHILE _LPAREN logic_rel_exp _RPAREN statement

   67 return_statement: _RETURN num_exp _SEMICOLON
   68                 | _RETURN _SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 5 7 12 18
    _IF (259) 62
    _ELSE (260) 61
    _RETURN (261) 67 68
    _ID <s> (262) 5 7 12 19 20 34 35 36 38 40 41 44 48 51 56
    _INT_NUMBER <s> (263) 52
    _UINT_NUMBER <s> (264) 53
    _LPAREN (265) 7 34 40 50 56 62 66
    _RPAREN (266) 7 34 40 50 56 62 66
    _LBRACKET (267) 14 43
    _RBRACKET (268) 14 43
    _ASSIGN (269) 44
    _SEMICOLON (270) 5 18 34 41 44 54 67 68
    _AROP <i> (271) 46
    _RELOP <i> (272) 65
    _COMMA (273) 11 20 36 40 59
    _POSTINCREMENT <i> (274) 41 51
    _WHILE (275) 66
    _LOGICOPER (276) 64
    _LOOP (277) 40
    _BRANCH (278) 38
    _LSQUAREBRACKET (279) 38
    _RSQUAREBRACKET (280) 38
    _ARROW (281) 38
    _ONE (282) 38
    _TWO (283) 38
    _THREE (284) 38
    _OTHER (285) 38
    _SELECT (286) 34
    _FROM (287) 34
    _WHERE (288) 34
    ONLY_IF (289)


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    program (36)
        on left: 1
        on right: 0
    function_list (37)
        on left: 2 3 4
        on right: 1 3 4
    global_variable (38)
        on left: 5
        on right: 4
    function (39)
        on left: 7
        on right: 2 3
    $@1 (40)
        on left: 6
        on right: 7
    sabezParametara (41)
        on left: 8 9
        on right: 7
    parameters (42)
        on left: 10 11
        on right: 9 11
    parameter (43)
        on left: 12
        on right: 10 11
    body (44)
        on left: 14
        on right: 7
    $@2 (45)
        on left: 13
        on right: 14
    variable_list (46)
        on left: 15 16
        on right: 14 16 43
    variable (47)
        on left: 18
        on right: 16
    $@3 (48)
        on left: 17
        on right: 18
    vars (49)
        on left: 19 20
        on right: 18 20
    statement_list (50)
        on left: 21 22
        on right: 14 22 43
    statement (51)
        on left: 23 24 25 26 27 28 29 30 31 32
        on right: 22 38 40 61 62 66
    select_statement (52)
        on left: 34
        on right: 32
    $@4 (53)
        on left: 33
        on right: 34
    multi_vars (54)
        on left: 35 36
        on right: 34 36
    branch_statement (55)
        on left: 38
        on right: 30
    $@5 (56)
        on left: 37
        on right: 38
    loop_statement (57)
        on left: 40
        on right: 29
    $@6 (58)
        on left: 39
        on right: 40
    postincrement_statement (59)
        on left: 41
        on right: 27
    compound_statement (60)
        on left: 43
        on right: 23
    $@7 (61)
        on left: 42
        on right: 43
    assignment_statement (62)
        on left: 44
        on right: 24
    num_exp <i> (63)
        on left: 45 46
        on right: 44 46 50 58 59 65 67
    exp <i> (64)
        on left: 47 48 49 50 51
        on right: 45 46
    literal <i> (65)
        on left: 52 53
        on right: 38 40 47
    function_statement (66)
        on left: 54
        on right: 31
    function_call <i> (67)
        on left: 56
        on right: 49 54
    $@8 (68)
        on left: 55
        on right: 56
    argument <i> (69)
        on left: 57 58 59
        on right: 56 59
    if_statement (70)
        on left: 60 61
        on right: 25
    if_part (71)
        on left: 62
        on right: 60 61
    logic_rel_exp (72)
        on left: 63 64
        on right: 34 62 64 66
    rel_exp <i> (73)
        on left: 65
        on right: 63 64
    while_statement (74)
        on left: 66
        on right: 28
    return_statement (75)
        on left: 67 68
        on right: 26


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    7 function: _TYPE . _ID $@1 _LPAREN sabezParametara _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function
    4              | function_list . global_variable

    _TYPE  shift, and go to state 7

    $default  reduce using rule 1 (program)

    global_variable  go to state 8
    function         go to state 9


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    7 function: _TYPE _ID . $@1 _LPAREN sabezParametara _RPAREN body

    $default  reduce using rule 6 ($@1)

    $@1  go to state 10


State 6

    0 $accept: program $end .

    $default  accept


State 7

    5 global_variable: _TYPE . _ID _SEMICOLON
    7 function: _TYPE . _ID $@1 _LPAREN sabezParametara _RPAREN body

    _ID  shift, and go to state 11


State 8

    4 function_list: function_list global_variable .

    $default  reduce using rule 4 (function_list)


State 9

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 10

    7 function: _TYPE _ID $@1 . _LPAREN sabezParametara _RPAREN body

    _LPAREN  shift, and go to state 12


State 11

    5 global_variable: _TYPE _ID . _SEMICOLON
    7 function: _TYPE _ID . $@1 _LPAREN sabezParametara _RPAREN body

    _SEMICOLON  shift, and go to state 13

    $default  reduce using rule 6 ($@1)

    $@1  go to state 10


State 12

    7 function: _TYPE _ID $@1 _LPAREN . sabezParametara _RPAREN body

    _TYPE  shift, and go to state 14

    $default  reduce using rule 8 (sabezParametara)

    sabezParametara  go to state 15
    parameters       go to state 16
    parameter        go to state 17


State 13

    5 global_variable: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 5 (global_variable)


State 14

   12 parameter: _TYPE . _ID

    _ID  shift, and go to state 18


State 15

    7 function: _TYPE _ID $@1 _LPAREN sabezParametara . _RPAREN body

    _RPAREN  shift, and go to state 19


State 16

    9 sabezParametara: parameters .
   11 parameters: parameters . _COMMA parameter

    _COMMA  shift, and go to state 20

    $default  reduce using rule 9 (sabezParametara)


State 17

   10 parameters: parameter .

    $default  reduce using rule 10 (parameters)


State 18

   12 parameter: _TYPE _ID .

    $default  reduce using rule 12 (parameter)


State 19

    7 function: _TYPE _ID $@1 _LPAREN sabezParametara _RPAREN . body

    _LBRACKET  shift, and go to state 21

    body  go to state 22


State 20

   11 parameters: parameters _COMMA . parameter

    _TYPE  shift, and go to state 14

    parameter  go to state 23


State 21

   14 body: _LBRACKET . $@2 variable_list statement_list _RBRACKET

    $default  reduce using rule 13 ($@2)

    $@2  go to state 24


State 22

    7 function: _TYPE _ID $@1 _LPAREN sabezParametara _RPAREN body .

    $default  reduce using rule 7 (function)


State 23

   11 parameters: parameters _COMMA parameter .

    $default  reduce using rule 11 (parameters)


State 24

   14 body: _LBRACKET $@2 . variable_list statement_list _RBRACKET

    $default  reduce using rule 15 (variable_list)

    variable_list  go to state 25


State 25

   14 body: _LBRACKET $@2 variable_list . statement_list _RBRACKET
   16 variable_list: variable_list . variable

    _TYPE  shift, and go to state 26

    $default  reduce using rule 21 (statement_list)

    variable        go to state 27
    statement_list  go to state 28


State 26

   18 variable: _TYPE . $@3 vars _SEMICOLON

    $default  reduce using rule 17 ($@3)

    $@3  go to state 29


State 27

   16 variable_list: variable_list variable .

    $default  reduce using rule 16 (variable_list)


State 28

   14 body: _LBRACKET $@2 variable_list statement_list . _RBRACKET
   22 statement_list: statement_list . statement

    _IF        shift, and go to state 30
    _RETURN    shift, and go to state 31
    _ID        shift, and go to state 32
    _LBRACKET  shift, and go to state 33
    _RBRACKET  shift, and go to state 34
    _WHILE     shift, and go to state 35
    _LOOP      shift, and go to state 36
    _BRANCH    shift, and go to state 37
    _SELECT    shift, and go to state 38

    statement                go to state 39
    select_statement         go to state 40
    branch_statement         go to state 41
    loop_statement           go to state 42
    postincrement_statement  go to state 43
    compound_statement       go to state 44
    assignment_statement     go to state 45
    function_statement       go to state 46
    function_call            go to state 47
    if_statement             go to state 48
    if_part                  go to state 49
    while_statement          go to state 50
    return_statement         go to state 51


State 29

   18 variable: _TYPE $@3 . vars _SEMICOLON

    _ID  shift, and go to state 52

    vars  go to state 53


State 30

   62 if_part: _IF . _LPAREN logic_rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 54


State 31

   67 return_statement: _RETURN . num_exp _SEMICOLON
   68                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 55
    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57
    _LPAREN       shift, and go to state 58
    _SEMICOLON    shift, and go to state 59

    num_exp        go to state 60
    exp            go to state 61
    literal        go to state 62
    function_call  go to state 63


State 32

   41 postincrement_statement: _ID . _POSTINCREMENT _SEMICOLON
   44 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   56 function_call: _ID . $@8 _LPAREN argument _RPAREN

    _ASSIGN         shift, and go to state 64
    _POSTINCREMENT  shift, and go to state 65

    $default  reduce using rule 55 ($@8)

    $@8  go to state 66


State 33

   43 compound_statement: _LBRACKET . $@7 variable_list statement_list _RBRACKET

    $default  reduce using rule 42 ($@7)

    $@7  go to state 67


State 34

   14 body: _LBRACKET $@2 variable_list statement_list _RBRACKET .

    $default  reduce using rule 14 (body)


State 35

   66 while_statement: _WHILE . _LPAREN logic_rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 68


State 36

   40 loop_statement: _LOOP . _LPAREN _ID _COMMA literal _COMMA literal _COMMA literal _RPAREN $@6 statement

    _LPAREN  shift, and go to state 69


State 37

   38 branch_statement: _BRANCH . _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@5 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _LSQUAREBRACKET  shift, and go to state 70


State 38

   34 select_statement: _SELECT . multi_vars _FROM _ID $@4 _WHERE _LPAREN logic_rel_exp _RPAREN _SEMICOLON

    _ID  shift, and go to state 71

    multi_vars  go to state 72


State 39

   22 statement_list: statement_list statement .

    $default  reduce using rule 22 (statement_list)


State 40

   32 statement: select_statement .

    $default  reduce using rule 32 (statement)


State 41

   30 statement: branch_statement .

    $default  reduce using rule 30 (statement)


State 42

   29 statement: loop_statement .

    $default  reduce using rule 29 (statement)


State 43

   27 statement: postincrement_statement .

    $default  reduce using rule 27 (statement)


State 44

   23 statement: compound_statement .

    $default  reduce using rule 23 (statement)


State 45

   24 statement: assignment_statement .

    $default  reduce using rule 24 (statement)


State 46

   31 statement: function_statement .

    $default  reduce using rule 31 (statement)


State 47

   54 function_statement: function_call . _SEMICOLON

    _SEMICOLON  shift, and go to state 73


State 48

   25 statement: if_statement .

    $default  reduce using rule 25 (statement)


State 49

   60 if_statement: if_part .
   61             | if_part . _ELSE statement

    _ELSE  shift, and go to state 74

    $default  reduce using rule 60 (if_statement)


State 50

   28 statement: while_statement .

    $default  reduce using rule 28 (statement)


State 51

   26 statement: return_statement .

    $default  reduce using rule 26 (statement)


State 52

   19 vars: _ID .

    $default  reduce using rule 19 (vars)


State 53

   18 variable: _TYPE $@3 vars . _SEMICOLON
   20 vars: vars . _COMMA _ID

    _SEMICOLON  shift, and go to state 75
    _COMMA      shift, and go to state 76


State 54

   62 if_part: _IF _LPAREN . logic_rel_exp _RPAREN statement

    _ID           shift, and go to state 55
    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57
    _LPAREN       shift, and go to state 58

    num_exp        go to state 77
    exp            go to state 61
    literal        go to state 62
    function_call  go to state 63
    logic_rel_exp  go to state 78
    rel_exp        go to state 79


State 55

   48 exp: _ID .
   51    | _ID . _POSTINCREMENT
   56 function_call: _ID . $@8 _LPAREN argument _RPAREN

    _POSTINCREMENT  shift, and go to state 80

    _LPAREN   reduce using rule 55 ($@8)
    $default  reduce using rule 48 (exp)

    $@8  go to state 66


State 56

   52 literal: _INT_NUMBER .

    $default  reduce using rule 52 (literal)


State 57

   53 literal: _UINT_NUMBER .

    $default  reduce using rule 53 (literal)


State 58

   50 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 55
    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57
    _LPAREN       shift, and go to state 58

    num_exp        go to state 81
    exp            go to state 61
    literal        go to state 62
    function_call  go to state 63


State 59

   68 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 68 (return_statement)


State 60

   46 num_exp: num_exp . _AROP exp
   67 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 82
    _AROP       shift, and go to state 83


State 61

   45 num_exp: exp .

    $default  reduce using rule 45 (num_exp)


State 62

   47 exp: literal .

    $default  reduce using rule 47 (exp)


State 63

   49 exp: function_call .

    $default  reduce using rule 49 (exp)


State 64

   44 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 55
    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57
    _LPAREN       shift, and go to state 58

    num_exp        go to state 84
    exp            go to state 61
    literal        go to state 62
    function_call  go to state 63


State 65

   41 postincrement_statement: _ID _POSTINCREMENT . _SEMICOLON

    _SEMICOLON  shift, and go to state 85


State 66

   56 function_call: _ID $@8 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 86


State 67

   43 compound_statement: _LBRACKET $@7 . variable_list statement_list _RBRACKET

    $default  reduce using rule 15 (variable_list)

    variable_list  go to state 87


State 68

   66 while_statement: _WHILE _LPAREN . logic_rel_exp _RPAREN statement

    _ID           shift, and go to state 55
    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57
    _LPAREN       shift, and go to state 58

    num_exp        go to state 77
    exp            go to state 61
    literal        go to state 62
    function_call  go to state 63
    logic_rel_exp  go to state 88
    rel_exp        go to state 79


State 69

   40 loop_statement: _LOOP _LPAREN . _ID _COMMA literal _COMMA literal _COMMA literal _RPAREN $@6 statement

    _ID  shift, and go to state 89


State 70

   38 branch_statement: _BRANCH _LSQUAREBRACKET . _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@5 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _ID  shift, and go to state 90


State 71

   35 multi_vars: _ID .

    $default  reduce using rule 35 (multi_vars)


State 72

   34 select_statement: _SELECT multi_vars . _FROM _ID $@4 _WHERE _LPAREN logic_rel_exp _RPAREN _SEMICOLON
   36 multi_vars: multi_vars . _COMMA _ID

    _COMMA  shift, and go to state 91
    _FROM   shift, and go to state 92


State 73

   54 function_statement: function_call _SEMICOLON .

    $default  reduce using rule 54 (function_statement)


State 74

   61 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 30
    _RETURN    shift, and go to state 31
    _ID        shift, and go to state 32
    _LBRACKET  shift, and go to state 33
    _WHILE     shift, and go to state 35
    _LOOP      shift, and go to state 36
    _BRANCH    shift, and go to state 37
    _SELECT    shift, and go to state 38

    statement                go to state 93
    select_statement         go to state 40
    branch_statement         go to state 41
    loop_statement           go to state 42
    postincrement_statement  go to state 43
    compound_statement       go to state 44
    assignment_statement     go to state 45
    function_statement       go to state 46
    function_call            go to state 47
    if_statement             go to state 48
    if_part                  go to state 49
    while_statement          go to state 50
    return_statement         go to state 51


State 75

   18 variable: _TYPE $@3 vars _SEMICOLON .

    $default  reduce using rule 18 (variable)


State 76

   20 vars: vars _COMMA . _ID

    _ID  shift, and go to state 94


State 77

   46 num_exp: num_exp . _AROP exp
   65 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 83
    _RELOP  shift, and go to state 95


State 78

   62 if_part: _IF _LPAREN logic_rel_exp . _RPAREN statement
   64 logic_rel_exp: logic_rel_exp . _LOGICOPER rel_exp

    _RPAREN     shift, and go to state 96
    _LOGICOPER  shift, and go to state 97


State 79

   63 logic_rel_exp: rel_exp .

    $default  reduce using rule 63 (logic_rel_exp)


State 80

   51 exp: _ID _POSTINCREMENT .

    $default  reduce using rule 51 (exp)


State 81

   46 num_exp: num_exp . _AROP exp
   50 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 98
    _AROP    shift, and go to state 83


State 82

   67 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 67 (return_statement)


State 83

   46 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 55
    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57
    _LPAREN       shift, and go to state 58

    exp            go to state 99
    literal        go to state 62
    function_call  go to state 63


State 84

   44 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   46 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 100
    _AROP       shift, and go to state 83


State 85

   41 postincrement_statement: _ID _POSTINCREMENT _SEMICOLON .

    $default  reduce using rule 41 (postincrement_statement)


State 86

   56 function_call: _ID $@8 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 55
    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57
    _LPAREN       shift, and go to state 58

    $default  reduce using rule 57 (argument)

    num_exp        go to state 101
    exp            go to state 61
    literal        go to state 62
    function_call  go to state 63
    argument       go to state 102


State 87

   16 variable_list: variable_list . variable
   43 compound_statement: _LBRACKET $@7 variable_list . statement_list _RBRACKET

    _TYPE  shift, and go to state 26

    $default  reduce using rule 21 (statement_list)

    variable        go to state 27
    statement_list  go to state 103


State 88

   64 logic_rel_exp: logic_rel_exp . _LOGICOPER rel_exp
   66 while_statement: _WHILE _LPAREN logic_rel_exp . _RPAREN statement

    _RPAREN     shift, and go to state 104
    _LOGICOPER  shift, and go to state 97


State 89

   40 loop_statement: _LOOP _LPAREN _ID . _COMMA literal _COMMA literal _COMMA literal _RPAREN $@6 statement

    _COMMA  shift, and go to state 105


State 90

   38 branch_statement: _BRANCH _LSQUAREBRACKET _ID . _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@5 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _ARROW  shift, and go to state 106


State 91

   36 multi_vars: multi_vars _COMMA . _ID

    _ID  shift, and go to state 107


State 92

   34 select_statement: _SELECT multi_vars _FROM . _ID $@4 _WHERE _LPAREN logic_rel_exp _RPAREN _SEMICOLON

    _ID  shift, and go to state 108


State 93

   61 if_statement: if_part _ELSE statement .

    $default  reduce using rule 61 (if_statement)


State 94

   20 vars: vars _COMMA _ID .

    $default  reduce using rule 20 (vars)


State 95

   65 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 55
    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57
    _LPAREN       shift, and go to state 58

    num_exp        go to state 109
    exp            go to state 61
    literal        go to state 62
    function_call  go to state 63


State 96

   62 if_part: _IF _LPAREN logic_rel_exp _RPAREN . statement

    _IF        shift, and go to state 30
    _RETURN    shift, and go to state 31
    _ID        shift, and go to state 32
    _LBRACKET  shift, and go to state 33
    _WHILE     shift, and go to state 35
    _LOOP      shift, and go to state 36
    _BRANCH    shift, and go to state 37
    _SELECT    shift, and go to state 38

    statement                go to state 110
    select_statement         go to state 40
    branch_statement         go to state 41
    loop_statement           go to state 42
    postincrement_statement  go to state 43
    compound_statement       go to state 44
    assignment_statement     go to state 45
    function_statement       go to state 46
    function_call            go to state 47
    if_statement             go to state 48
    if_part                  go to state 49
    while_statement          go to state 50
    return_statement         go to state 51


State 97

   64 logic_rel_exp: logic_rel_exp _LOGICOPER . rel_exp

    _ID           shift, and go to state 55
    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57
    _LPAREN       shift, and go to state 58

    num_exp        go to state 77
    exp            go to state 61
    literal        go to state 62
    function_call  go to state 63
    rel_exp        go to state 111


State 98

   50 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 50 (exp)


State 99

   46 num_exp: num_exp _AROP exp .

    $default  reduce using rule 46 (num_exp)


State 100

   44 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 44 (assignment_statement)


State 101

   46 num_exp: num_exp . _AROP exp
   58 argument: num_exp .

    _AROP  shift, and go to state 83

    $default  reduce using rule 58 (argument)


State 102

   56 function_call: _ID $@8 _LPAREN argument . _RPAREN
   59 argument: argument . _COMMA num_exp

    _RPAREN  shift, and go to state 112
    _COMMA   shift, and go to state 113


State 103

   22 statement_list: statement_list . statement
   43 compound_statement: _LBRACKET $@7 variable_list statement_list . _RBRACKET

    _IF        shift, and go to state 30
    _RETURN    shift, and go to state 31
    _ID        shift, and go to state 32
    _LBRACKET  shift, and go to state 33
    _RBRACKET  shift, and go to state 114
    _WHILE     shift, and go to state 35
    _LOOP      shift, and go to state 36
    _BRANCH    shift, and go to state 37
    _SELECT    shift, and go to state 38

    statement                go to state 39
    select_statement         go to state 40
    branch_statement         go to state 41
    loop_statement           go to state 42
    postincrement_statement  go to state 43
    compound_statement       go to state 44
    assignment_statement     go to state 45
    function_statement       go to state 46
    function_call            go to state 47
    if_statement             go to state 48
    if_part                  go to state 49
    while_statement          go to state 50
    return_statement         go to state 51


State 104

   66 while_statement: _WHILE _LPAREN logic_rel_exp _RPAREN . statement

    _IF        shift, and go to state 30
    _RETURN    shift, and go to state 31
    _ID        shift, and go to state 32
    _LBRACKET  shift, and go to state 33
    _WHILE     shift, and go to state 35
    _LOOP      shift, and go to state 36
    _BRANCH    shift, and go to state 37
    _SELECT    shift, and go to state 38

    statement                go to state 115
    select_statement         go to state 40
    branch_statement         go to state 41
    loop_statement           go to state 42
    postincrement_statement  go to state 43
    compound_statement       go to state 44
    assignment_statement     go to state 45
    function_statement       go to state 46
    function_call            go to state 47
    if_statement             go to state 48
    if_part                  go to state 49
    while_statement          go to state 50
    return_statement         go to state 51


State 105

   40 loop_statement: _LOOP _LPAREN _ID _COMMA . literal _COMMA literal _COMMA literal _RPAREN $@6 statement

    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57

    literal  go to state 116


State 106

   38 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW . literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@5 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57

    literal  go to state 117


State 107

   36 multi_vars: multi_vars _COMMA _ID .

    $default  reduce using rule 36 (multi_vars)


State 108

   34 select_statement: _SELECT multi_vars _FROM _ID . $@4 _WHERE _LPAREN logic_rel_exp _RPAREN _SEMICOLON

    $default  reduce using rule 33 ($@4)

    $@4  go to state 118


State 109

   46 num_exp: num_exp . _AROP exp
   65 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 83

    $default  reduce using rule 65 (rel_exp)


State 110

   62 if_part: _IF _LPAREN logic_rel_exp _RPAREN statement .

    $default  reduce using rule 62 (if_part)


State 111

   64 logic_rel_exp: logic_rel_exp _LOGICOPER rel_exp .

    $default  reduce using rule 64 (logic_rel_exp)


State 112

   56 function_call: _ID $@8 _LPAREN argument _RPAREN .

    $default  reduce using rule 56 (function_call)


State 113

   59 argument: argument _COMMA . num_exp

    _ID           shift, and go to state 55
    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57
    _LPAREN       shift, and go to state 58

    num_exp        go to state 119
    exp            go to state 61
    literal        go to state 62
    function_call  go to state 63


State 114

   43 compound_statement: _LBRACKET $@7 variable_list statement_list _RBRACKET .

    $default  reduce using rule 43 (compound_statement)


State 115

   66 while_statement: _WHILE _LPAREN logic_rel_exp _RPAREN statement .

    $default  reduce using rule 66 (while_statement)


State 116

   40 loop_statement: _LOOP _LPAREN _ID _COMMA literal . _COMMA literal _COMMA literal _RPAREN $@6 statement

    _COMMA  shift, and go to state 120


State 117

   38 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal . _ARROW literal _ARROW literal _RSQUAREBRACKET $@5 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _ARROW  shift, and go to state 121


State 118

   34 select_statement: _SELECT multi_vars _FROM _ID $@4 . _WHERE _LPAREN logic_rel_exp _RPAREN _SEMICOLON

    _WHERE  shift, and go to state 122


State 119

   46 num_exp: num_exp . _AROP exp
   59 argument: argument _COMMA num_exp .

    _AROP  shift, and go to state 83

    $default  reduce using rule 59 (argument)


State 120

   40 loop_statement: _LOOP _LPAREN _ID _COMMA literal _COMMA . literal _COMMA literal _RPAREN $@6 statement

    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57

    literal  go to state 123


State 121

   38 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW . literal _ARROW literal _RSQUAREBRACKET $@5 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57

    literal  go to state 124


State 122

   34 select_statement: _SELECT multi_vars _FROM _ID $@4 _WHERE . _LPAREN logic_rel_exp _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 125


State 123

   40 loop_statement: _LOOP _LPAREN _ID _COMMA literal _COMMA literal . _COMMA literal _RPAREN $@6 statement

    _COMMA  shift, and go to state 126


State 124

   38 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal . _ARROW literal _RSQUAREBRACKET $@5 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _ARROW  shift, and go to state 127


State 125

   34 select_statement: _SELECT multi_vars _FROM _ID $@4 _WHERE _LPAREN . logic_rel_exp _RPAREN _SEMICOLON

    _ID           shift, and go to state 55
    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57
    _LPAREN       shift, and go to state 58

    num_exp        go to state 77
    exp            go to state 61
    literal        go to state 62
    function_call  go to state 63
    logic_rel_exp  go to state 128
    rel_exp        go to state 79


State 126

   40 loop_statement: _LOOP _LPAREN _ID _COMMA literal _COMMA literal _COMMA . literal _RPAREN $@6 statement

    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57

    literal  go to state 129


State 127

   38 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW . literal _RSQUAREBRACKET $@5 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57

    literal  go to state 130


State 128

   34 select_statement: _SELECT multi_vars _FROM _ID $@4 _WHERE _LPAREN logic_rel_exp . _RPAREN _SEMICOLON
   64 logic_rel_exp: logic_rel_exp . _LOGICOPER rel_exp

    _RPAREN     shift, and go to state 131
    _LOGICOPER  shift, and go to state 97


State 129

   40 loop_statement: _LOOP _LPAREN _ID _COMMA literal _COMMA literal _COMMA literal . _RPAREN $@6 statement

    _RPAREN  shift, and go to state 132


State 130

   38 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal . _RSQUAREBRACKET $@5 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _RSQUAREBRACKET  shift, and go to state 133


State 131

   34 select_statement: _SELECT multi_vars _FROM _ID $@4 _WHERE _LPAREN logic_rel_exp _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 134


State 132

   40 loop_statement: _LOOP _LPAREN _ID _COMMA literal _COMMA literal _COMMA literal _RPAREN . $@6 statement

    $default  reduce using rule 39 ($@6)

    $@6  go to state 135


State 133

   38 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET . $@5 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    $default  reduce using rule 37 ($@5)

    $@5  go to state 136


State 134

   34 select_statement: _SELECT multi_vars _FROM _ID $@4 _WHERE _LPAREN logic_rel_exp _RPAREN _SEMICOLON .

    $default  reduce using rule 34 (select_statement)


State 135

   40 loop_statement: _LOOP _LPAREN _ID _COMMA literal _COMMA literal _COMMA literal _RPAREN $@6 . statement

    _IF        shift, and go to state 30
    _RETURN    shift, and go to state 31
    _ID        shift, and go to state 32
    _LBRACKET  shift, and go to state 33
    _WHILE     shift, and go to state 35
    _LOOP      shift, and go to state 36
    _BRANCH    shift, and go to state 37
    _SELECT    shift, and go to state 38

    statement                go to state 137
    select_statement         go to state 40
    branch_statement         go to state 41
    loop_statement           go to state 42
    postincrement_statement  go to state 43
    compound_statement       go to state 44
    assignment_statement     go to state 45
    function_statement       go to state 46
    function_call            go to state 47
    if_statement             go to state 48
    if_part                  go to state 49
    while_statement          go to state 50
    return_statement         go to state 51


State 136

   38 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@5 . _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _ONE  shift, and go to state 138


State 137

   40 loop_statement: _LOOP _LPAREN _ID _COMMA literal _COMMA literal _COMMA literal _RPAREN $@6 statement .

    $default  reduce using rule 40 (loop_statement)


State 138

   38 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@5 _ONE . _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _ARROW  shift, and go to state 139


State 139

   38 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@5 _ONE _ARROW . statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _IF        shift, and go to state 30
    _RETURN    shift, and go to state 31
    _ID        shift, and go to state 32
    _LBRACKET  shift, and go to state 33
    _WHILE     shift, and go to state 35
    _LOOP      shift, and go to state 36
    _BRANCH    shift, and go to state 37
    _SELECT    shift, and go to state 38

    statement                go to state 140
    select_statement         go to state 40
    branch_statement         go to state 41
    loop_statement           go to state 42
    postincrement_statement  go to state 43
    compound_statement       go to state 44
    assignment_statement     go to state 45
    function_statement       go to state 46
    function_call            go to state 47
    if_statement             go to state 48
    if_part                  go to state 49
    while_statement          go to state 50
    return_statement         go to state 51


State 140

   38 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@5 _ONE _ARROW statement . _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _TWO  shift, and go to state 141


State 141

   38 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@5 _ONE _ARROW statement _TWO . _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _ARROW  shift, and go to state 142


State 142

   38 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@5 _ONE _ARROW statement _TWO _ARROW . statement _THREE _ARROW statement _OTHER _ARROW statement

    _IF        shift, and go to state 30
    _RETURN    shift, and go to state 31
    _ID        shift, and go to state 32
    _LBRACKET  shift, and go to state 33
    _WHILE     shift, and go to state 35
    _LOOP      shift, and go to state 36
    _BRANCH    shift, and go to state 37
    _SELECT    shift, and go to state 38

    statement                go to state 143
    select_statement         go to state 40
    branch_statement         go to state 41
    loop_statement           go to state 42
    postincrement_statement  go to state 43
    compound_statement       go to state 44
    assignment_statement     go to state 45
    function_statement       go to state 46
    function_call            go to state 47
    if_statement             go to state 48
    if_part                  go to state 49
    while_statement          go to state 50
    return_statement         go to state 51


State 143

   38 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@5 _ONE _ARROW statement _TWO _ARROW statement . _THREE _ARROW statement _OTHER _ARROW statement

    _THREE  shift, and go to state 144


State 144

   38 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@5 _ONE _ARROW statement _TWO _ARROW statement _THREE . _ARROW statement _OTHER _ARROW statement

    _ARROW  shift, and go to state 145


State 145

   38 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@5 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW . statement _OTHER _ARROW statement

    _IF        shift, and go to state 30
    _RETURN    shift, and go to state 31
    _ID        shift, and go to state 32
    _LBRACKET  shift, and go to state 33
    _WHILE     shift, and go to state 35
    _LOOP      shift, and go to state 36
    _BRANCH    shift, and go to state 37
    _SELECT    shift, and go to state 38

    statement                go to state 146
    select_statement         go to state 40
    branch_statement         go to state 41
    loop_statement           go to state 42
    postincrement_statement  go to state 43
    compound_statement       go to state 44
    assignment_statement     go to state 45
    function_statement       go to state 46
    function_call            go to state 47
    if_statement             go to state 48
    if_part                  go to state 49
    while_statement          go to state 50
    return_statement         go to state 51


State 146

   38 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@5 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement . _OTHER _ARROW statement

    _OTHER  shift, and go to state 147


State 147

   38 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@5 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER . _ARROW statement

    _ARROW  shift, and go to state 148


State 148

   38 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@5 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW . statement

    _IF        shift, and go to state 30
    _RETURN    shift, and go to state 31
    _ID        shift, and go to state 32
    _LBRACKET  shift, and go to state 33
    _WHILE     shift, and go to state 35
    _LOOP      shift, and go to state 36
    _BRANCH    shift, and go to state 37
    _SELECT    shift, and go to state 38

    statement                go to state 149
    select_statement         go to state 40
    branch_statement         go to state 41
    loop_statement           go to state 42
    postincrement_statement  go to state 43
    compound_statement       go to state 44
    assignment_statement     go to state 45
    function_statement       go to state 46
    function_call            go to state 47
    if_statement             go to state 48
    if_part                  go to state 49
    while_statement          go to state 50
    return_statement         go to state 51


State 149

   38 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@5 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement .

    $default  reduce using rule 38 (branch_statement)
