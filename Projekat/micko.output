Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: %empty
    3              | function_list function
    4              | function_list global_variable

    5 global_variable: _TYPE _ID _SEMICOLON

    6 $@1: %empty

    7 function: _TYPE _ID $@1 _LPAREN sabezParametara _RPAREN body

    8 sabezParametara: %empty
    9                | parameters

   10 parameters: parameter
   11           | parameters _COMMA parameter

   12 parameter: _TYPE _ID

   13 $@2: %empty

   14 $@3: %empty

   15 body: _LBRACKET $@2 variable_list $@3 statement_list _RBRACKET

   16 variable_list: %empty
   17              | variable_list variable

   18 $@4: %empty

   19 variable: _TYPE $@4 vars _SEMICOLON

   20 vars: _ID
   21     | vars _COMMA _ID

   22 statement_list: %empty
   23               | statement_list statement

   24 statement: compound_statement
   25          | assignment_statement
   26          | if_statement
   27          | return_statement
   28          | postincrement_statement
   29          | while_statement
   30          | loop_statement
   31          | branch_statement
   32          | function_statement
   33          | select_statement

   34 $@5: %empty

   35 select_statement: _SELECT multi_vars _FROM _ID $@5 _WHERE _LPAREN logic_rel_exp _RPAREN _SEMICOLON

   36 multi_vars: _ID
   37           | multi_vars _COMMA _ID

   38 $@6: %empty

   39 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@6 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

   40 $@7: %empty

   41 loop_statement: _LOOP _LPAREN _ID _COMMA literal _COMMA literal _COMMA literal _RPAREN $@7 statement

   42 postincrement_statement: _ID _POSTINCREMENT _SEMICOLON

   43 $@8: %empty

   44 compound_statement: _LBRACKET $@8 variable_list statement_list _RBRACKET

   45 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   46 num_exp: exp
   47        | num_exp _AROP exp

   48 exp: literal
   49    | _ID
   50    | function_call
   51    | _LPAREN num_exp _RPAREN
   52    | _ID _POSTINCREMENT

   53 literal: _INT_NUMBER
   54        | _UINT_NUMBER

   55 function_statement: function_call _SEMICOLON

   56 $@9: %empty

   57 function_call: _ID $@9 _LPAREN argument _RPAREN

   58 argument: %empty
   59         | num_exp
   60         | argument _COMMA num_exp

   61 if_statement: if_part
   62             | if_part _ELSE statement

   63 @10: %empty

   64 if_part: _IF _LPAREN @10 logic_rel_exp _RPAREN statement

   65 logic_rel_exp: rel_exp
   66              | logic_rel_exp _LOGICOPER rel_exp

   67 rel_exp: num_exp _RELOP num_exp

   68 while_statement: _WHILE _LPAREN logic_rel_exp _RPAREN statement

   69 return_statement: _RETURN num_exp _SEMICOLON
   70                 | _RETURN _SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 5 7 12 19
    _IF (259) 64
    _ELSE (260) 62
    _RETURN (261) 69 70
    _ID <s> (262) 5 7 12 20 21 35 36 37 39 41 42 45 49 52 57
    _INT_NUMBER <s> (263) 53
    _UINT_NUMBER <s> (264) 54
    _LPAREN (265) 7 35 41 51 57 64 68
    _RPAREN (266) 7 35 41 51 57 64 68
    _LBRACKET (267) 15 44
    _RBRACKET (268) 15 44
    _ASSIGN (269) 45
    _SEMICOLON (270) 5 19 35 42 45 55 69 70
    _AROP <i> (271) 47
    _RELOP <i> (272) 67
    _COMMA (273) 11 21 37 41 60
    _POSTINCREMENT <i> (274) 42 52
    _WHILE (275) 68
    _LOGICOPER (276) 66
    _LOOP (277) 41
    _BRANCH (278) 39
    _LSQUAREBRACKET (279) 39
    _RSQUAREBRACKET (280) 39
    _ARROW (281) 39
    _ONE (282) 39
    _TWO (283) 39
    _THREE (284) 39
    _OTHER (285) 39
    _SELECT (286) 35
    _FROM (287) 35
    _WHERE (288) 35
    ONLY_IF (289)


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    program (36)
        on left: 1
        on right: 0
    function_list (37)
        on left: 2 3 4
        on right: 1 3 4
    global_variable (38)
        on left: 5
        on right: 4
    function (39)
        on left: 7
        on right: 3
    $@1 (40)
        on left: 6
        on right: 7
    sabezParametara (41)
        on left: 8 9
        on right: 7
    parameters (42)
        on left: 10 11
        on right: 9 11
    parameter (43)
        on left: 12
        on right: 10 11
    body (44)
        on left: 15
        on right: 7
    $@2 (45)
        on left: 13
        on right: 15
    $@3 (46)
        on left: 14
        on right: 15
    variable_list (47)
        on left: 16 17
        on right: 15 17 44
    variable (48)
        on left: 19
        on right: 17
    $@4 (49)
        on left: 18
        on right: 19
    vars (50)
        on left: 20 21
        on right: 19 21
    statement_list (51)
        on left: 22 23
        on right: 15 23 44
    statement (52)
        on left: 24 25 26 27 28 29 30 31 32 33
        on right: 23 39 41 62 64 68
    select_statement (53)
        on left: 35
        on right: 33
    $@5 (54)
        on left: 34
        on right: 35
    multi_vars (55)
        on left: 36 37
        on right: 35 37
    branch_statement (56)
        on left: 39
        on right: 31
    $@6 (57)
        on left: 38
        on right: 39
    loop_statement (58)
        on left: 41
        on right: 30
    $@7 (59)
        on left: 40
        on right: 41
    postincrement_statement (60)
        on left: 42
        on right: 28
    compound_statement (61)
        on left: 44
        on right: 24
    $@8 (62)
        on left: 43
        on right: 44
    assignment_statement (63)
        on left: 45
        on right: 25
    num_exp <i> (64)
        on left: 46 47
        on right: 45 47 51 59 60 67 69
    exp <i> (65)
        on left: 48 49 50 51 52
        on right: 46 47
    literal <i> (66)
        on left: 53 54
        on right: 39 41 48
    function_statement (67)
        on left: 55
        on right: 32
    function_call <i> (68)
        on left: 57
        on right: 50 55
    $@9 (69)
        on left: 56
        on right: 57
    argument <i> (70)
        on left: 58 59 60
        on right: 57 60
    if_statement (71)
        on left: 61 62
        on right: 26
    if_part <i> (72)
        on left: 64
        on right: 61 62
    @10 (73)
        on left: 63
        on right: 64
    logic_rel_exp (74)
        on left: 65 66
        on right: 35 64 66 68
    rel_exp <i> (75)
        on left: 67
        on right: 65 66
    while_statement (76)
        on left: 68
        on right: 29
    return_statement (77)
        on left: 69 70
        on right: 27


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (function_list)

    program        go to state 1
    function_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: function_list .
    3 function_list: function_list . function
    4              | function_list . global_variable

    _TYPE  shift, and go to state 4

    $default  reduce using rule 1 (program)

    global_variable  go to state 5
    function         go to state 6


State 3

    0 $accept: program $end .

    $default  accept


State 4

    5 global_variable: _TYPE . _ID _SEMICOLON
    7 function: _TYPE . _ID $@1 _LPAREN sabezParametara _RPAREN body

    _ID  shift, and go to state 7


State 5

    4 function_list: function_list global_variable .

    $default  reduce using rule 4 (function_list)


State 6

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 7

    5 global_variable: _TYPE _ID . _SEMICOLON
    7 function: _TYPE _ID . $@1 _LPAREN sabezParametara _RPAREN body

    _SEMICOLON  shift, and go to state 8

    $default  reduce using rule 6 ($@1)

    $@1  go to state 9


State 8

    5 global_variable: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 5 (global_variable)


State 9

    7 function: _TYPE _ID $@1 . _LPAREN sabezParametara _RPAREN body

    _LPAREN  shift, and go to state 10


State 10

    7 function: _TYPE _ID $@1 _LPAREN . sabezParametara _RPAREN body

    _TYPE  shift, and go to state 11

    $default  reduce using rule 8 (sabezParametara)

    sabezParametara  go to state 12
    parameters       go to state 13
    parameter        go to state 14


State 11

   12 parameter: _TYPE . _ID

    _ID  shift, and go to state 15


State 12

    7 function: _TYPE _ID $@1 _LPAREN sabezParametara . _RPAREN body

    _RPAREN  shift, and go to state 16


State 13

    9 sabezParametara: parameters .
   11 parameters: parameters . _COMMA parameter

    _COMMA  shift, and go to state 17

    $default  reduce using rule 9 (sabezParametara)


State 14

   10 parameters: parameter .

    $default  reduce using rule 10 (parameters)


State 15

   12 parameter: _TYPE _ID .

    $default  reduce using rule 12 (parameter)


State 16

    7 function: _TYPE _ID $@1 _LPAREN sabezParametara _RPAREN . body

    _LBRACKET  shift, and go to state 18

    body  go to state 19


State 17

   11 parameters: parameters _COMMA . parameter

    _TYPE  shift, and go to state 11

    parameter  go to state 20


State 18

   15 body: _LBRACKET . $@2 variable_list $@3 statement_list _RBRACKET

    $default  reduce using rule 13 ($@2)

    $@2  go to state 21


State 19

    7 function: _TYPE _ID $@1 _LPAREN sabezParametara _RPAREN body .

    $default  reduce using rule 7 (function)


State 20

   11 parameters: parameters _COMMA parameter .

    $default  reduce using rule 11 (parameters)


State 21

   15 body: _LBRACKET $@2 . variable_list $@3 statement_list _RBRACKET

    $default  reduce using rule 16 (variable_list)

    variable_list  go to state 22


State 22

   15 body: _LBRACKET $@2 variable_list . $@3 statement_list _RBRACKET
   17 variable_list: variable_list . variable

    _TYPE  shift, and go to state 23

    $default  reduce using rule 14 ($@3)

    $@3       go to state 24
    variable  go to state 25


State 23

   19 variable: _TYPE . $@4 vars _SEMICOLON

    $default  reduce using rule 18 ($@4)

    $@4  go to state 26


State 24

   15 body: _LBRACKET $@2 variable_list $@3 . statement_list _RBRACKET

    $default  reduce using rule 22 (statement_list)

    statement_list  go to state 27


State 25

   17 variable_list: variable_list variable .

    $default  reduce using rule 17 (variable_list)


State 26

   19 variable: _TYPE $@4 . vars _SEMICOLON

    _ID  shift, and go to state 28

    vars  go to state 29


State 27

   15 body: _LBRACKET $@2 variable_list $@3 statement_list . _RBRACKET
   23 statement_list: statement_list . statement

    _IF        shift, and go to state 30
    _RETURN    shift, and go to state 31
    _ID        shift, and go to state 32
    _LBRACKET  shift, and go to state 33
    _RBRACKET  shift, and go to state 34
    _WHILE     shift, and go to state 35
    _LOOP      shift, and go to state 36
    _BRANCH    shift, and go to state 37
    _SELECT    shift, and go to state 38

    statement                go to state 39
    select_statement         go to state 40
    branch_statement         go to state 41
    loop_statement           go to state 42
    postincrement_statement  go to state 43
    compound_statement       go to state 44
    assignment_statement     go to state 45
    function_statement       go to state 46
    function_call            go to state 47
    if_statement             go to state 48
    if_part                  go to state 49
    while_statement          go to state 50
    return_statement         go to state 51


State 28

   20 vars: _ID .

    $default  reduce using rule 20 (vars)


State 29

   19 variable: _TYPE $@4 vars . _SEMICOLON
   21 vars: vars . _COMMA _ID

    _SEMICOLON  shift, and go to state 52
    _COMMA      shift, and go to state 53


State 30

   64 if_part: _IF . _LPAREN @10 logic_rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 54


State 31

   69 return_statement: _RETURN . num_exp _SEMICOLON
   70                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 55
    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57
    _LPAREN       shift, and go to state 58
    _SEMICOLON    shift, and go to state 59

    num_exp        go to state 60
    exp            go to state 61
    literal        go to state 62
    function_call  go to state 63


State 32

   42 postincrement_statement: _ID . _POSTINCREMENT _SEMICOLON
   45 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   57 function_call: _ID . $@9 _LPAREN argument _RPAREN

    _ASSIGN         shift, and go to state 64
    _POSTINCREMENT  shift, and go to state 65

    $default  reduce using rule 56 ($@9)

    $@9  go to state 66


State 33

   44 compound_statement: _LBRACKET . $@8 variable_list statement_list _RBRACKET

    $default  reduce using rule 43 ($@8)

    $@8  go to state 67


State 34

   15 body: _LBRACKET $@2 variable_list $@3 statement_list _RBRACKET .

    $default  reduce using rule 15 (body)


State 35

   68 while_statement: _WHILE . _LPAREN logic_rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 68


State 36

   41 loop_statement: _LOOP . _LPAREN _ID _COMMA literal _COMMA literal _COMMA literal _RPAREN $@7 statement

    _LPAREN  shift, and go to state 69


State 37

   39 branch_statement: _BRANCH . _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@6 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _LSQUAREBRACKET  shift, and go to state 70


State 38

   35 select_statement: _SELECT . multi_vars _FROM _ID $@5 _WHERE _LPAREN logic_rel_exp _RPAREN _SEMICOLON

    _ID  shift, and go to state 71

    multi_vars  go to state 72


State 39

   23 statement_list: statement_list statement .

    $default  reduce using rule 23 (statement_list)


State 40

   33 statement: select_statement .

    $default  reduce using rule 33 (statement)


State 41

   31 statement: branch_statement .

    $default  reduce using rule 31 (statement)


State 42

   30 statement: loop_statement .

    $default  reduce using rule 30 (statement)


State 43

   28 statement: postincrement_statement .

    $default  reduce using rule 28 (statement)


State 44

   24 statement: compound_statement .

    $default  reduce using rule 24 (statement)


State 45

   25 statement: assignment_statement .

    $default  reduce using rule 25 (statement)


State 46

   32 statement: function_statement .

    $default  reduce using rule 32 (statement)


State 47

   55 function_statement: function_call . _SEMICOLON

    _SEMICOLON  shift, and go to state 73


State 48

   26 statement: if_statement .

    $default  reduce using rule 26 (statement)


State 49

   61 if_statement: if_part .
   62             | if_part . _ELSE statement

    _ELSE  shift, and go to state 74

    $default  reduce using rule 61 (if_statement)


State 50

   29 statement: while_statement .

    $default  reduce using rule 29 (statement)


State 51

   27 statement: return_statement .

    $default  reduce using rule 27 (statement)


State 52

   19 variable: _TYPE $@4 vars _SEMICOLON .

    $default  reduce using rule 19 (variable)


State 53

   21 vars: vars _COMMA . _ID

    _ID  shift, and go to state 75


State 54

   64 if_part: _IF _LPAREN . @10 logic_rel_exp _RPAREN statement

    $default  reduce using rule 63 (@10)

    @10  go to state 76


State 55

   49 exp: _ID .
   52    | _ID . _POSTINCREMENT
   57 function_call: _ID . $@9 _LPAREN argument _RPAREN

    _POSTINCREMENT  shift, and go to state 77

    _LPAREN   reduce using rule 56 ($@9)
    $default  reduce using rule 49 (exp)

    $@9  go to state 66


State 56

   53 literal: _INT_NUMBER .

    $default  reduce using rule 53 (literal)


State 57

   54 literal: _UINT_NUMBER .

    $default  reduce using rule 54 (literal)


State 58

   51 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 55
    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57
    _LPAREN       shift, and go to state 58

    num_exp        go to state 78
    exp            go to state 61
    literal        go to state 62
    function_call  go to state 63


State 59

   70 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 70 (return_statement)


State 60

   47 num_exp: num_exp . _AROP exp
   69 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 79
    _AROP       shift, and go to state 80


State 61

   46 num_exp: exp .

    $default  reduce using rule 46 (num_exp)


State 62

   48 exp: literal .

    $default  reduce using rule 48 (exp)


State 63

   50 exp: function_call .

    $default  reduce using rule 50 (exp)


State 64

   45 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 55
    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57
    _LPAREN       shift, and go to state 58

    num_exp        go to state 81
    exp            go to state 61
    literal        go to state 62
    function_call  go to state 63


State 65

   42 postincrement_statement: _ID _POSTINCREMENT . _SEMICOLON

    _SEMICOLON  shift, and go to state 82


State 66

   57 function_call: _ID $@9 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 83


State 67

   44 compound_statement: _LBRACKET $@8 . variable_list statement_list _RBRACKET

    $default  reduce using rule 16 (variable_list)

    variable_list  go to state 84


State 68

   68 while_statement: _WHILE _LPAREN . logic_rel_exp _RPAREN statement

    _ID           shift, and go to state 55
    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57
    _LPAREN       shift, and go to state 58

    num_exp        go to state 85
    exp            go to state 61
    literal        go to state 62
    function_call  go to state 63
    logic_rel_exp  go to state 86
    rel_exp        go to state 87


State 69

   41 loop_statement: _LOOP _LPAREN . _ID _COMMA literal _COMMA literal _COMMA literal _RPAREN $@7 statement

    _ID  shift, and go to state 88


State 70

   39 branch_statement: _BRANCH _LSQUAREBRACKET . _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@6 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _ID  shift, and go to state 89


State 71

   36 multi_vars: _ID .

    $default  reduce using rule 36 (multi_vars)


State 72

   35 select_statement: _SELECT multi_vars . _FROM _ID $@5 _WHERE _LPAREN logic_rel_exp _RPAREN _SEMICOLON
   37 multi_vars: multi_vars . _COMMA _ID

    _COMMA  shift, and go to state 90
    _FROM   shift, and go to state 91


State 73

   55 function_statement: function_call _SEMICOLON .

    $default  reduce using rule 55 (function_statement)


State 74

   62 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 30
    _RETURN    shift, and go to state 31
    _ID        shift, and go to state 32
    _LBRACKET  shift, and go to state 33
    _WHILE     shift, and go to state 35
    _LOOP      shift, and go to state 36
    _BRANCH    shift, and go to state 37
    _SELECT    shift, and go to state 38

    statement                go to state 92
    select_statement         go to state 40
    branch_statement         go to state 41
    loop_statement           go to state 42
    postincrement_statement  go to state 43
    compound_statement       go to state 44
    assignment_statement     go to state 45
    function_statement       go to state 46
    function_call            go to state 47
    if_statement             go to state 48
    if_part                  go to state 49
    while_statement          go to state 50
    return_statement         go to state 51


State 75

   21 vars: vars _COMMA _ID .

    $default  reduce using rule 21 (vars)


State 76

   64 if_part: _IF _LPAREN @10 . logic_rel_exp _RPAREN statement

    _ID           shift, and go to state 55
    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57
    _LPAREN       shift, and go to state 58

    num_exp        go to state 85
    exp            go to state 61
    literal        go to state 62
    function_call  go to state 63
    logic_rel_exp  go to state 93
    rel_exp        go to state 87


State 77

   52 exp: _ID _POSTINCREMENT .

    $default  reduce using rule 52 (exp)


State 78

   47 num_exp: num_exp . _AROP exp
   51 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 94
    _AROP    shift, and go to state 80


State 79

   69 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 69 (return_statement)


State 80

   47 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 55
    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57
    _LPAREN       shift, and go to state 58

    exp            go to state 95
    literal        go to state 62
    function_call  go to state 63


State 81

   45 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   47 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 96
    _AROP       shift, and go to state 80


State 82

   42 postincrement_statement: _ID _POSTINCREMENT _SEMICOLON .

    $default  reduce using rule 42 (postincrement_statement)


State 83

   57 function_call: _ID $@9 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 55
    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57
    _LPAREN       shift, and go to state 58

    $default  reduce using rule 58 (argument)

    num_exp        go to state 97
    exp            go to state 61
    literal        go to state 62
    function_call  go to state 63
    argument       go to state 98


State 84

   17 variable_list: variable_list . variable
   44 compound_statement: _LBRACKET $@8 variable_list . statement_list _RBRACKET

    _TYPE  shift, and go to state 23

    $default  reduce using rule 22 (statement_list)

    variable        go to state 25
    statement_list  go to state 99


State 85

   47 num_exp: num_exp . _AROP exp
   67 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 80
    _RELOP  shift, and go to state 100


State 86

   66 logic_rel_exp: logic_rel_exp . _LOGICOPER rel_exp
   68 while_statement: _WHILE _LPAREN logic_rel_exp . _RPAREN statement

    _RPAREN     shift, and go to state 101
    _LOGICOPER  shift, and go to state 102


State 87

   65 logic_rel_exp: rel_exp .

    $default  reduce using rule 65 (logic_rel_exp)


State 88

   41 loop_statement: _LOOP _LPAREN _ID . _COMMA literal _COMMA literal _COMMA literal _RPAREN $@7 statement

    _COMMA  shift, and go to state 103


State 89

   39 branch_statement: _BRANCH _LSQUAREBRACKET _ID . _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@6 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _ARROW  shift, and go to state 104


State 90

   37 multi_vars: multi_vars _COMMA . _ID

    _ID  shift, and go to state 105


State 91

   35 select_statement: _SELECT multi_vars _FROM . _ID $@5 _WHERE _LPAREN logic_rel_exp _RPAREN _SEMICOLON

    _ID  shift, and go to state 106


State 92

   62 if_statement: if_part _ELSE statement .

    $default  reduce using rule 62 (if_statement)


State 93

   64 if_part: _IF _LPAREN @10 logic_rel_exp . _RPAREN statement
   66 logic_rel_exp: logic_rel_exp . _LOGICOPER rel_exp

    _RPAREN     shift, and go to state 107
    _LOGICOPER  shift, and go to state 102


State 94

   51 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 51 (exp)


State 95

   47 num_exp: num_exp _AROP exp .

    $default  reduce using rule 47 (num_exp)


State 96

   45 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 45 (assignment_statement)


State 97

   47 num_exp: num_exp . _AROP exp
   59 argument: num_exp .

    _AROP  shift, and go to state 80

    $default  reduce using rule 59 (argument)


State 98

   57 function_call: _ID $@9 _LPAREN argument . _RPAREN
   60 argument: argument . _COMMA num_exp

    _RPAREN  shift, and go to state 108
    _COMMA   shift, and go to state 109


State 99

   23 statement_list: statement_list . statement
   44 compound_statement: _LBRACKET $@8 variable_list statement_list . _RBRACKET

    _IF        shift, and go to state 30
    _RETURN    shift, and go to state 31
    _ID        shift, and go to state 32
    _LBRACKET  shift, and go to state 33
    _RBRACKET  shift, and go to state 110
    _WHILE     shift, and go to state 35
    _LOOP      shift, and go to state 36
    _BRANCH    shift, and go to state 37
    _SELECT    shift, and go to state 38

    statement                go to state 39
    select_statement         go to state 40
    branch_statement         go to state 41
    loop_statement           go to state 42
    postincrement_statement  go to state 43
    compound_statement       go to state 44
    assignment_statement     go to state 45
    function_statement       go to state 46
    function_call            go to state 47
    if_statement             go to state 48
    if_part                  go to state 49
    while_statement          go to state 50
    return_statement         go to state 51


State 100

   67 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 55
    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57
    _LPAREN       shift, and go to state 58

    num_exp        go to state 111
    exp            go to state 61
    literal        go to state 62
    function_call  go to state 63


State 101

   68 while_statement: _WHILE _LPAREN logic_rel_exp _RPAREN . statement

    _IF        shift, and go to state 30
    _RETURN    shift, and go to state 31
    _ID        shift, and go to state 32
    _LBRACKET  shift, and go to state 33
    _WHILE     shift, and go to state 35
    _LOOP      shift, and go to state 36
    _BRANCH    shift, and go to state 37
    _SELECT    shift, and go to state 38

    statement                go to state 112
    select_statement         go to state 40
    branch_statement         go to state 41
    loop_statement           go to state 42
    postincrement_statement  go to state 43
    compound_statement       go to state 44
    assignment_statement     go to state 45
    function_statement       go to state 46
    function_call            go to state 47
    if_statement             go to state 48
    if_part                  go to state 49
    while_statement          go to state 50
    return_statement         go to state 51


State 102

   66 logic_rel_exp: logic_rel_exp _LOGICOPER . rel_exp

    _ID           shift, and go to state 55
    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57
    _LPAREN       shift, and go to state 58

    num_exp        go to state 85
    exp            go to state 61
    literal        go to state 62
    function_call  go to state 63
    rel_exp        go to state 113


State 103

   41 loop_statement: _LOOP _LPAREN _ID _COMMA . literal _COMMA literal _COMMA literal _RPAREN $@7 statement

    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57

    literal  go to state 114


State 104

   39 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW . literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@6 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57

    literal  go to state 115


State 105

   37 multi_vars: multi_vars _COMMA _ID .

    $default  reduce using rule 37 (multi_vars)


State 106

   35 select_statement: _SELECT multi_vars _FROM _ID . $@5 _WHERE _LPAREN logic_rel_exp _RPAREN _SEMICOLON

    $default  reduce using rule 34 ($@5)

    $@5  go to state 116


State 107

   64 if_part: _IF _LPAREN @10 logic_rel_exp _RPAREN . statement

    _IF        shift, and go to state 30
    _RETURN    shift, and go to state 31
    _ID        shift, and go to state 32
    _LBRACKET  shift, and go to state 33
    _WHILE     shift, and go to state 35
    _LOOP      shift, and go to state 36
    _BRANCH    shift, and go to state 37
    _SELECT    shift, and go to state 38

    statement                go to state 117
    select_statement         go to state 40
    branch_statement         go to state 41
    loop_statement           go to state 42
    postincrement_statement  go to state 43
    compound_statement       go to state 44
    assignment_statement     go to state 45
    function_statement       go to state 46
    function_call            go to state 47
    if_statement             go to state 48
    if_part                  go to state 49
    while_statement          go to state 50
    return_statement         go to state 51


State 108

   57 function_call: _ID $@9 _LPAREN argument _RPAREN .

    $default  reduce using rule 57 (function_call)


State 109

   60 argument: argument _COMMA . num_exp

    _ID           shift, and go to state 55
    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57
    _LPAREN       shift, and go to state 58

    num_exp        go to state 118
    exp            go to state 61
    literal        go to state 62
    function_call  go to state 63


State 110

   44 compound_statement: _LBRACKET $@8 variable_list statement_list _RBRACKET .

    $default  reduce using rule 44 (compound_statement)


State 111

   47 num_exp: num_exp . _AROP exp
   67 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 80

    $default  reduce using rule 67 (rel_exp)


State 112

   68 while_statement: _WHILE _LPAREN logic_rel_exp _RPAREN statement .

    $default  reduce using rule 68 (while_statement)


State 113

   66 logic_rel_exp: logic_rel_exp _LOGICOPER rel_exp .

    $default  reduce using rule 66 (logic_rel_exp)


State 114

   41 loop_statement: _LOOP _LPAREN _ID _COMMA literal . _COMMA literal _COMMA literal _RPAREN $@7 statement

    _COMMA  shift, and go to state 119


State 115

   39 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal . _ARROW literal _ARROW literal _RSQUAREBRACKET $@6 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _ARROW  shift, and go to state 120


State 116

   35 select_statement: _SELECT multi_vars _FROM _ID $@5 . _WHERE _LPAREN logic_rel_exp _RPAREN _SEMICOLON

    _WHERE  shift, and go to state 121


State 117

   64 if_part: _IF _LPAREN @10 logic_rel_exp _RPAREN statement .

    $default  reduce using rule 64 (if_part)


State 118

   47 num_exp: num_exp . _AROP exp
   60 argument: argument _COMMA num_exp .

    _AROP  shift, and go to state 80

    $default  reduce using rule 60 (argument)


State 119

   41 loop_statement: _LOOP _LPAREN _ID _COMMA literal _COMMA . literal _COMMA literal _RPAREN $@7 statement

    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57

    literal  go to state 122


State 120

   39 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW . literal _ARROW literal _RSQUAREBRACKET $@6 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57

    literal  go to state 123


State 121

   35 select_statement: _SELECT multi_vars _FROM _ID $@5 _WHERE . _LPAREN logic_rel_exp _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 124


State 122

   41 loop_statement: _LOOP _LPAREN _ID _COMMA literal _COMMA literal . _COMMA literal _RPAREN $@7 statement

    _COMMA  shift, and go to state 125


State 123

   39 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal . _ARROW literal _RSQUAREBRACKET $@6 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _ARROW  shift, and go to state 126


State 124

   35 select_statement: _SELECT multi_vars _FROM _ID $@5 _WHERE _LPAREN . logic_rel_exp _RPAREN _SEMICOLON

    _ID           shift, and go to state 55
    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57
    _LPAREN       shift, and go to state 58

    num_exp        go to state 85
    exp            go to state 61
    literal        go to state 62
    function_call  go to state 63
    logic_rel_exp  go to state 127
    rel_exp        go to state 87


State 125

   41 loop_statement: _LOOP _LPAREN _ID _COMMA literal _COMMA literal _COMMA . literal _RPAREN $@7 statement

    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57

    literal  go to state 128


State 126

   39 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW . literal _RSQUAREBRACKET $@6 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57

    literal  go to state 129


State 127

   35 select_statement: _SELECT multi_vars _FROM _ID $@5 _WHERE _LPAREN logic_rel_exp . _RPAREN _SEMICOLON
   66 logic_rel_exp: logic_rel_exp . _LOGICOPER rel_exp

    _RPAREN     shift, and go to state 130
    _LOGICOPER  shift, and go to state 102


State 128

   41 loop_statement: _LOOP _LPAREN _ID _COMMA literal _COMMA literal _COMMA literal . _RPAREN $@7 statement

    _RPAREN  shift, and go to state 131


State 129

   39 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal . _RSQUAREBRACKET $@6 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _RSQUAREBRACKET  shift, and go to state 132


State 130

   35 select_statement: _SELECT multi_vars _FROM _ID $@5 _WHERE _LPAREN logic_rel_exp _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 133


State 131

   41 loop_statement: _LOOP _LPAREN _ID _COMMA literal _COMMA literal _COMMA literal _RPAREN . $@7 statement

    $default  reduce using rule 40 ($@7)

    $@7  go to state 134


State 132

   39 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET . $@6 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    $default  reduce using rule 38 ($@6)

    $@6  go to state 135


State 133

   35 select_statement: _SELECT multi_vars _FROM _ID $@5 _WHERE _LPAREN logic_rel_exp _RPAREN _SEMICOLON .

    $default  reduce using rule 35 (select_statement)


State 134

   41 loop_statement: _LOOP _LPAREN _ID _COMMA literal _COMMA literal _COMMA literal _RPAREN $@7 . statement

    _IF        shift, and go to state 30
    _RETURN    shift, and go to state 31
    _ID        shift, and go to state 32
    _LBRACKET  shift, and go to state 33
    _WHILE     shift, and go to state 35
    _LOOP      shift, and go to state 36
    _BRANCH    shift, and go to state 37
    _SELECT    shift, and go to state 38

    statement                go to state 136
    select_statement         go to state 40
    branch_statement         go to state 41
    loop_statement           go to state 42
    postincrement_statement  go to state 43
    compound_statement       go to state 44
    assignment_statement     go to state 45
    function_statement       go to state 46
    function_call            go to state 47
    if_statement             go to state 48
    if_part                  go to state 49
    while_statement          go to state 50
    return_statement         go to state 51


State 135

   39 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@6 . _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _ONE  shift, and go to state 137


State 136

   41 loop_statement: _LOOP _LPAREN _ID _COMMA literal _COMMA literal _COMMA literal _RPAREN $@7 statement .

    $default  reduce using rule 41 (loop_statement)


State 137

   39 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@6 _ONE . _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _ARROW  shift, and go to state 138


State 138

   39 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@6 _ONE _ARROW . statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _IF        shift, and go to state 30
    _RETURN    shift, and go to state 31
    _ID        shift, and go to state 32
    _LBRACKET  shift, and go to state 33
    _WHILE     shift, and go to state 35
    _LOOP      shift, and go to state 36
    _BRANCH    shift, and go to state 37
    _SELECT    shift, and go to state 38

    statement                go to state 139
    select_statement         go to state 40
    branch_statement         go to state 41
    loop_statement           go to state 42
    postincrement_statement  go to state 43
    compound_statement       go to state 44
    assignment_statement     go to state 45
    function_statement       go to state 46
    function_call            go to state 47
    if_statement             go to state 48
    if_part                  go to state 49
    while_statement          go to state 50
    return_statement         go to state 51


State 139

   39 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@6 _ONE _ARROW statement . _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _TWO  shift, and go to state 140


State 140

   39 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@6 _ONE _ARROW statement _TWO . _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _ARROW  shift, and go to state 141


State 141

   39 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@6 _ONE _ARROW statement _TWO _ARROW . statement _THREE _ARROW statement _OTHER _ARROW statement

    _IF        shift, and go to state 30
    _RETURN    shift, and go to state 31
    _ID        shift, and go to state 32
    _LBRACKET  shift, and go to state 33
    _WHILE     shift, and go to state 35
    _LOOP      shift, and go to state 36
    _BRANCH    shift, and go to state 37
    _SELECT    shift, and go to state 38

    statement                go to state 142
    select_statement         go to state 40
    branch_statement         go to state 41
    loop_statement           go to state 42
    postincrement_statement  go to state 43
    compound_statement       go to state 44
    assignment_statement     go to state 45
    function_statement       go to state 46
    function_call            go to state 47
    if_statement             go to state 48
    if_part                  go to state 49
    while_statement          go to state 50
    return_statement         go to state 51


State 142

   39 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@6 _ONE _ARROW statement _TWO _ARROW statement . _THREE _ARROW statement _OTHER _ARROW statement

    _THREE  shift, and go to state 143


State 143

   39 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@6 _ONE _ARROW statement _TWO _ARROW statement _THREE . _ARROW statement _OTHER _ARROW statement

    _ARROW  shift, and go to state 144


State 144

   39 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@6 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW . statement _OTHER _ARROW statement

    _IF        shift, and go to state 30
    _RETURN    shift, and go to state 31
    _ID        shift, and go to state 32
    _LBRACKET  shift, and go to state 33
    _WHILE     shift, and go to state 35
    _LOOP      shift, and go to state 36
    _BRANCH    shift, and go to state 37
    _SELECT    shift, and go to state 38

    statement                go to state 145
    select_statement         go to state 40
    branch_statement         go to state 41
    loop_statement           go to state 42
    postincrement_statement  go to state 43
    compound_statement       go to state 44
    assignment_statement     go to state 45
    function_statement       go to state 46
    function_call            go to state 47
    if_statement             go to state 48
    if_part                  go to state 49
    while_statement          go to state 50
    return_statement         go to state 51


State 145

   39 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@6 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement . _OTHER _ARROW statement

    _OTHER  shift, and go to state 146


State 146

   39 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@6 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER . _ARROW statement

    _ARROW  shift, and go to state 147


State 147

   39 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@6 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW . statement

    _IF        shift, and go to state 30
    _RETURN    shift, and go to state 31
    _ID        shift, and go to state 32
    _LBRACKET  shift, and go to state 33
    _WHILE     shift, and go to state 35
    _LOOP      shift, and go to state 36
    _BRANCH    shift, and go to state 37
    _SELECT    shift, and go to state 38

    statement                go to state 148
    select_statement         go to state 40
    branch_statement         go to state 41
    loop_statement           go to state 42
    postincrement_statement  go to state 43
    compound_statement       go to state 44
    assignment_statement     go to state 45
    function_statement       go to state 46
    function_call            go to state 47
    if_statement             go to state 48
    if_part                  go to state 49
    while_statement          go to state 50
    return_statement         go to state 51


State 148

   39 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@6 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement .

    $default  reduce using rule 39 (branch_statement)
