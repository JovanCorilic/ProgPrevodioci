Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 function: _TYPE _ID $@1 _LPAREN parameters _RPAREN body

    6 parameters: parameter
    7           | parameters _COMMA parameter

    8 parameter: %empty
    9          | _TYPE _ID

   10 body: _LBRACKET variable_list statement_list _RBRACKET

   11 variable_list: %empty
   12              | variable_list variable

   13 $@2: %empty

   14 variable: _TYPE $@2 vars _SEMICOLON

   15 vars: _ID
   16     | vars _COMMA _ID

   17 statement_list: %empty
   18               | statement_list statement

   19 statement: compound_statement
   20          | assignment_statement
   21          | if_statement
   22          | return_statement
   23          | postincrement_statement
   24          | while_statement
   25          | loop_statement

   26 $@3: %empty

   27 loop_statement: _LOOP _LPAREN _ID _COMMA literal _COMMA literal _COMMA literal _RPAREN $@3 statement

   28 postincrement_statement: _ID _POSTINCREMENT _SEMICOLON

   29 $@4: %empty

   30 compound_statement: _LBRACKET $@4 variable_list statement_list _RBRACKET

   31 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   32 num_exp: exp
   33        | num_exp _AROP exp
   34        | num_exp _POSTINCREMENT

   35 exp: literal
   36    | _ID
   37    | function_call
   38    | _LPAREN num_exp _RPAREN

   39 literal: _INT_NUMBER
   40        | _UINT_NUMBER

   41 $@5: %empty

   42 function_call: _ID $@5 _LPAREN argument _RPAREN

   43 argument: %empty
   44         | num_exp
   45         | argument _COMMA num_exp

   46 if_statement: if_part
   47             | if_part _ELSE statement

   48 if_part: _IF _LPAREN logic_rel_exp _RPAREN statement

   49 logic_rel_exp: rel_exp
   50              | logic_rel_exp _LOGICOPER rel_exp

   51 rel_exp: num_exp _RELOP num_exp

   52 while_statement: _WHILE _LPAREN logic_rel_exp _RPAREN statement

   53 return_statement: _RETURN num_exp _SEMICOLON
   54                 | _RETURN _SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 5 9 14
    _IF (259) 48
    _ELSE (260) 47
    _RETURN (261) 53 54
    _ID <s> (262) 5 9 15 16 27 28 31 36 42
    _INT_NUMBER <s> (263) 39
    _UINT_NUMBER <s> (264) 40
    _LPAREN (265) 5 27 38 42 48 52
    _RPAREN (266) 5 27 38 42 48 52
    _LBRACKET (267) 10 30
    _RBRACKET (268) 10 30
    _ASSIGN (269) 31
    _SEMICOLON (270) 14 28 31 53 54
    _AROP <i> (271) 33
    _RELOP <i> (272) 51
    _COMMA (273) 7 16 27 45
    _POSTINCREMENT <i> (274) 28 34
    _WHILE (275) 52
    _LOGICOPER (276) 50
    _LOOP (277) 27
    ONLY_IF (278)


Nonterminals, with rules where they appear

    $accept (24)
        on left: 0
    program (25)
        on left: 1
        on right: 0
    function_list (26)
        on left: 2 3
        on right: 1 3
    function (27)
        on left: 5
        on right: 2 3
    $@1 (28)
        on left: 4
        on right: 5
    parameters (29)
        on left: 6 7
        on right: 5 7
    parameter (30)
        on left: 8 9
        on right: 6 7
    body (31)
        on left: 10
        on right: 5
    variable_list (32)
        on left: 11 12
        on right: 10 12 30
    variable (33)
        on left: 14
        on right: 12
    $@2 (34)
        on left: 13
        on right: 14
    vars (35)
        on left: 15 16
        on right: 14 16
    statement_list (36)
        on left: 17 18
        on right: 10 18 30
    statement (37)
        on left: 19 20 21 22 23 24 25
        on right: 18 27 47 48 52
    loop_statement (38)
        on left: 27
        on right: 25
    $@3 (39)
        on left: 26
        on right: 27
    postincrement_statement (40)
        on left: 28
        on right: 23
    compound_statement (41)
        on left: 30
        on right: 19
    $@4 (42)
        on left: 29
        on right: 30
    assignment_statement (43)
        on left: 31
        on right: 20
    num_exp <i> (44)
        on left: 32 33 34
        on right: 31 33 34 38 44 45 51 53
    exp <i> (45)
        on left: 35 36 37 38
        on right: 32 33
    literal <i> (46)
        on left: 39 40
        on right: 27 35
    function_call <i> (47)
        on left: 42
        on right: 37
    $@5 (48)
        on left: 41
        on right: 42
    argument <i> (49)
        on left: 43 44 45
        on right: 42 45
    if_statement (50)
        on left: 46 47
        on right: 21
    if_part (51)
        on left: 48
        on right: 46 47
    logic_rel_exp (52)
        on left: 49 50
        on right: 48 50 52
    rel_exp <i> (53)
        on left: 51
        on right: 49 50
    while_statement (54)
        on left: 52
        on right: 24
    return_statement (55)
        on left: 53 54
        on right: 22


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    5 function: _TYPE . _ID $@1 _LPAREN parameters _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    5 function: _TYPE _ID . $@1 _LPAREN parameters _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    5 function: _TYPE _ID $@1 . _LPAREN parameters _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    5 function: _TYPE _ID $@1 _LPAREN . parameters _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 8 (parameter)

    parameters  go to state 11
    parameter   go to state 12


State 10

    9 parameter: _TYPE . _ID

    _ID  shift, and go to state 13


State 11

    5 function: _TYPE _ID $@1 _LPAREN parameters . _RPAREN body
    7 parameters: parameters . _COMMA parameter

    _RPAREN  shift, and go to state 14
    _COMMA   shift, and go to state 15


State 12

    6 parameters: parameter .

    $default  reduce using rule 6 (parameters)


State 13

    9 parameter: _TYPE _ID .

    $default  reduce using rule 9 (parameter)


State 14

    5 function: _TYPE _ID $@1 _LPAREN parameters _RPAREN . body

    _LBRACKET  shift, and go to state 16

    body  go to state 17


State 15

    7 parameters: parameters _COMMA . parameter

    _TYPE  shift, and go to state 10

    $default  reduce using rule 8 (parameter)

    parameter  go to state 18


State 16

   10 body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 11 (variable_list)

    variable_list  go to state 19


State 17

    5 function: _TYPE _ID $@1 _LPAREN parameters _RPAREN body .

    $default  reduce using rule 5 (function)


State 18

    7 parameters: parameters _COMMA parameter .

    $default  reduce using rule 7 (parameters)


State 19

   10 body: _LBRACKET variable_list . statement_list _RBRACKET
   12 variable_list: variable_list . variable

    _TYPE  shift, and go to state 20

    $default  reduce using rule 17 (statement_list)

    variable        go to state 21
    statement_list  go to state 22


State 20

   14 variable: _TYPE . $@2 vars _SEMICOLON

    $default  reduce using rule 13 ($@2)

    $@2  go to state 23


State 21

   12 variable_list: variable_list variable .

    $default  reduce using rule 12 (variable_list)


State 22

   10 body: _LBRACKET variable_list statement_list . _RBRACKET
   18 statement_list: statement_list . statement

    _IF        shift, and go to state 24
    _RETURN    shift, and go to state 25
    _ID        shift, and go to state 26
    _LBRACKET  shift, and go to state 27
    _RBRACKET  shift, and go to state 28
    _WHILE     shift, and go to state 29
    _LOOP      shift, and go to state 30

    statement                go to state 31
    loop_statement           go to state 32
    postincrement_statement  go to state 33
    compound_statement       go to state 34
    assignment_statement     go to state 35
    if_statement             go to state 36
    if_part                  go to state 37
    while_statement          go to state 38
    return_statement         go to state 39


State 23

   14 variable: _TYPE $@2 . vars _SEMICOLON

    _ID  shift, and go to state 40

    vars  go to state 41


State 24

   48 if_part: _IF . _LPAREN logic_rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 42


State 25

   53 return_statement: _RETURN . num_exp _SEMICOLON
   54                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 44
    _UINT_NUMBER  shift, and go to state 45
    _LPAREN       shift, and go to state 46
    _SEMICOLON    shift, and go to state 47

    num_exp        go to state 48
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51


State 26

   28 postincrement_statement: _ID . _POSTINCREMENT _SEMICOLON
   31 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN         shift, and go to state 52
    _POSTINCREMENT  shift, and go to state 53


State 27

   30 compound_statement: _LBRACKET . $@4 variable_list statement_list _RBRACKET

    $default  reduce using rule 29 ($@4)

    $@4  go to state 54


State 28

   10 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 10 (body)


State 29

   52 while_statement: _WHILE . _LPAREN logic_rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 55


State 30

   27 loop_statement: _LOOP . _LPAREN _ID _COMMA literal _COMMA literal _COMMA literal _RPAREN $@3 statement

    _LPAREN  shift, and go to state 56


State 31

   18 statement_list: statement_list statement .

    $default  reduce using rule 18 (statement_list)


State 32

   25 statement: loop_statement .

    $default  reduce using rule 25 (statement)


State 33

   23 statement: postincrement_statement .

    $default  reduce using rule 23 (statement)


State 34

   19 statement: compound_statement .

    $default  reduce using rule 19 (statement)


State 35

   20 statement: assignment_statement .

    $default  reduce using rule 20 (statement)


State 36

   21 statement: if_statement .

    $default  reduce using rule 21 (statement)


State 37

   46 if_statement: if_part .
   47             | if_part . _ELSE statement

    _ELSE  shift, and go to state 57

    $default  reduce using rule 46 (if_statement)


State 38

   24 statement: while_statement .

    $default  reduce using rule 24 (statement)


State 39

   22 statement: return_statement .

    $default  reduce using rule 22 (statement)


State 40

   15 vars: _ID .

    $default  reduce using rule 15 (vars)


State 41

   14 variable: _TYPE $@2 vars . _SEMICOLON
   16 vars: vars . _COMMA _ID

    _SEMICOLON  shift, and go to state 58
    _COMMA      shift, and go to state 59


State 42

   48 if_part: _IF _LPAREN . logic_rel_exp _RPAREN statement

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 44
    _UINT_NUMBER  shift, and go to state 45
    _LPAREN       shift, and go to state 46

    num_exp        go to state 60
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51
    logic_rel_exp  go to state 61
    rel_exp        go to state 62


State 43

   36 exp: _ID .
   42 function_call: _ID . $@5 _LPAREN argument _RPAREN

    _LPAREN   reduce using rule 41 ($@5)
    $default  reduce using rule 36 (exp)

    $@5  go to state 63


State 44

   39 literal: _INT_NUMBER .

    $default  reduce using rule 39 (literal)


State 45

   40 literal: _UINT_NUMBER .

    $default  reduce using rule 40 (literal)


State 46

   38 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 44
    _UINT_NUMBER  shift, and go to state 45
    _LPAREN       shift, and go to state 46

    num_exp        go to state 64
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51


State 47

   54 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 54 (return_statement)


State 48

   33 num_exp: num_exp . _AROP exp
   34        | num_exp . _POSTINCREMENT
   53 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON      shift, and go to state 65
    _AROP           shift, and go to state 66
    _POSTINCREMENT  shift, and go to state 67


State 49

   32 num_exp: exp .

    $default  reduce using rule 32 (num_exp)


State 50

   35 exp: literal .

    $default  reduce using rule 35 (exp)


State 51

   37 exp: function_call .

    $default  reduce using rule 37 (exp)


State 52

   31 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 44
    _UINT_NUMBER  shift, and go to state 45
    _LPAREN       shift, and go to state 46

    num_exp        go to state 68
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51


State 53

   28 postincrement_statement: _ID _POSTINCREMENT . _SEMICOLON

    _SEMICOLON  shift, and go to state 69


State 54

   30 compound_statement: _LBRACKET $@4 . variable_list statement_list _RBRACKET

    $default  reduce using rule 11 (variable_list)

    variable_list  go to state 70


State 55

   52 while_statement: _WHILE _LPAREN . logic_rel_exp _RPAREN statement

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 44
    _UINT_NUMBER  shift, and go to state 45
    _LPAREN       shift, and go to state 46

    num_exp        go to state 60
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51
    logic_rel_exp  go to state 71
    rel_exp        go to state 62


State 56

   27 loop_statement: _LOOP _LPAREN . _ID _COMMA literal _COMMA literal _COMMA literal _RPAREN $@3 statement

    _ID  shift, and go to state 72


State 57

   47 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 24
    _RETURN    shift, and go to state 25
    _ID        shift, and go to state 26
    _LBRACKET  shift, and go to state 27
    _WHILE     shift, and go to state 29
    _LOOP      shift, and go to state 30

    statement                go to state 73
    loop_statement           go to state 32
    postincrement_statement  go to state 33
    compound_statement       go to state 34
    assignment_statement     go to state 35
    if_statement             go to state 36
    if_part                  go to state 37
    while_statement          go to state 38
    return_statement         go to state 39


State 58

   14 variable: _TYPE $@2 vars _SEMICOLON .

    $default  reduce using rule 14 (variable)


State 59

   16 vars: vars _COMMA . _ID

    _ID  shift, and go to state 74


State 60

   33 num_exp: num_exp . _AROP exp
   34        | num_exp . _POSTINCREMENT
   51 rel_exp: num_exp . _RELOP num_exp

    _AROP           shift, and go to state 66
    _RELOP          shift, and go to state 75
    _POSTINCREMENT  shift, and go to state 67


State 61

   48 if_part: _IF _LPAREN logic_rel_exp . _RPAREN statement
   50 logic_rel_exp: logic_rel_exp . _LOGICOPER rel_exp

    _RPAREN     shift, and go to state 76
    _LOGICOPER  shift, and go to state 77


State 62

   49 logic_rel_exp: rel_exp .

    $default  reduce using rule 49 (logic_rel_exp)


State 63

   42 function_call: _ID $@5 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 78


State 64

   33 num_exp: num_exp . _AROP exp
   34        | num_exp . _POSTINCREMENT
   38 exp: _LPAREN num_exp . _RPAREN

    _RPAREN         shift, and go to state 79
    _AROP           shift, and go to state 66
    _POSTINCREMENT  shift, and go to state 67


State 65

   53 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 53 (return_statement)


State 66

   33 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 44
    _UINT_NUMBER  shift, and go to state 45
    _LPAREN       shift, and go to state 46

    exp            go to state 80
    literal        go to state 50
    function_call  go to state 51


State 67

   34 num_exp: num_exp _POSTINCREMENT .

    $default  reduce using rule 34 (num_exp)


State 68

   31 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   33 num_exp: num_exp . _AROP exp
   34        | num_exp . _POSTINCREMENT

    _SEMICOLON      shift, and go to state 81
    _AROP           shift, and go to state 66
    _POSTINCREMENT  shift, and go to state 67


State 69

   28 postincrement_statement: _ID _POSTINCREMENT _SEMICOLON .

    $default  reduce using rule 28 (postincrement_statement)


State 70

   12 variable_list: variable_list . variable
   30 compound_statement: _LBRACKET $@4 variable_list . statement_list _RBRACKET

    _TYPE  shift, and go to state 20

    $default  reduce using rule 17 (statement_list)

    variable        go to state 21
    statement_list  go to state 82


State 71

   50 logic_rel_exp: logic_rel_exp . _LOGICOPER rel_exp
   52 while_statement: _WHILE _LPAREN logic_rel_exp . _RPAREN statement

    _RPAREN     shift, and go to state 83
    _LOGICOPER  shift, and go to state 77


State 72

   27 loop_statement: _LOOP _LPAREN _ID . _COMMA literal _COMMA literal _COMMA literal _RPAREN $@3 statement

    _COMMA  shift, and go to state 84


State 73

   47 if_statement: if_part _ELSE statement .

    $default  reduce using rule 47 (if_statement)


State 74

   16 vars: vars _COMMA _ID .

    $default  reduce using rule 16 (vars)


State 75

   51 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 44
    _UINT_NUMBER  shift, and go to state 45
    _LPAREN       shift, and go to state 46

    num_exp        go to state 85
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51


State 76

   48 if_part: _IF _LPAREN logic_rel_exp _RPAREN . statement

    _IF        shift, and go to state 24
    _RETURN    shift, and go to state 25
    _ID        shift, and go to state 26
    _LBRACKET  shift, and go to state 27
    _WHILE     shift, and go to state 29
    _LOOP      shift, and go to state 30

    statement                go to state 86
    loop_statement           go to state 32
    postincrement_statement  go to state 33
    compound_statement       go to state 34
    assignment_statement     go to state 35
    if_statement             go to state 36
    if_part                  go to state 37
    while_statement          go to state 38
    return_statement         go to state 39


State 77

   50 logic_rel_exp: logic_rel_exp _LOGICOPER . rel_exp

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 44
    _UINT_NUMBER  shift, and go to state 45
    _LPAREN       shift, and go to state 46

    num_exp        go to state 60
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51
    rel_exp        go to state 87


State 78

   42 function_call: _ID $@5 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 44
    _UINT_NUMBER  shift, and go to state 45
    _LPAREN       shift, and go to state 46

    $default  reduce using rule 43 (argument)

    num_exp        go to state 88
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51
    argument       go to state 89


State 79

   38 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 38 (exp)


State 80

   33 num_exp: num_exp _AROP exp .

    $default  reduce using rule 33 (num_exp)


State 81

   31 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 31 (assignment_statement)


State 82

   18 statement_list: statement_list . statement
   30 compound_statement: _LBRACKET $@4 variable_list statement_list . _RBRACKET

    _IF        shift, and go to state 24
    _RETURN    shift, and go to state 25
    _ID        shift, and go to state 26
    _LBRACKET  shift, and go to state 27
    _RBRACKET  shift, and go to state 90
    _WHILE     shift, and go to state 29
    _LOOP      shift, and go to state 30

    statement                go to state 31
    loop_statement           go to state 32
    postincrement_statement  go to state 33
    compound_statement       go to state 34
    assignment_statement     go to state 35
    if_statement             go to state 36
    if_part                  go to state 37
    while_statement          go to state 38
    return_statement         go to state 39


State 83

   52 while_statement: _WHILE _LPAREN logic_rel_exp _RPAREN . statement

    _IF        shift, and go to state 24
    _RETURN    shift, and go to state 25
    _ID        shift, and go to state 26
    _LBRACKET  shift, and go to state 27
    _WHILE     shift, and go to state 29
    _LOOP      shift, and go to state 30

    statement                go to state 91
    loop_statement           go to state 32
    postincrement_statement  go to state 33
    compound_statement       go to state 34
    assignment_statement     go to state 35
    if_statement             go to state 36
    if_part                  go to state 37
    while_statement          go to state 38
    return_statement         go to state 39


State 84

   27 loop_statement: _LOOP _LPAREN _ID _COMMA . literal _COMMA literal _COMMA literal _RPAREN $@3 statement

    _INT_NUMBER   shift, and go to state 44
    _UINT_NUMBER  shift, and go to state 45

    literal  go to state 92


State 85

   33 num_exp: num_exp . _AROP exp
   34        | num_exp . _POSTINCREMENT
   51 rel_exp: num_exp _RELOP num_exp .

    _AROP           shift, and go to state 66
    _POSTINCREMENT  shift, and go to state 67

    $default  reduce using rule 51 (rel_exp)


State 86

   48 if_part: _IF _LPAREN logic_rel_exp _RPAREN statement .

    $default  reduce using rule 48 (if_part)


State 87

   50 logic_rel_exp: logic_rel_exp _LOGICOPER rel_exp .

    $default  reduce using rule 50 (logic_rel_exp)


State 88

   33 num_exp: num_exp . _AROP exp
   34        | num_exp . _POSTINCREMENT
   44 argument: num_exp .

    _AROP           shift, and go to state 66
    _POSTINCREMENT  shift, and go to state 67

    $default  reduce using rule 44 (argument)


State 89

   42 function_call: _ID $@5 _LPAREN argument . _RPAREN
   45 argument: argument . _COMMA num_exp

    _RPAREN  shift, and go to state 93
    _COMMA   shift, and go to state 94


State 90

   30 compound_statement: _LBRACKET $@4 variable_list statement_list _RBRACKET .

    $default  reduce using rule 30 (compound_statement)


State 91

   52 while_statement: _WHILE _LPAREN logic_rel_exp _RPAREN statement .

    $default  reduce using rule 52 (while_statement)


State 92

   27 loop_statement: _LOOP _LPAREN _ID _COMMA literal . _COMMA literal _COMMA literal _RPAREN $@3 statement

    _COMMA  shift, and go to state 95


State 93

   42 function_call: _ID $@5 _LPAREN argument _RPAREN .

    $default  reduce using rule 42 (function_call)


State 94

   45 argument: argument _COMMA . num_exp

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 44
    _UINT_NUMBER  shift, and go to state 45
    _LPAREN       shift, and go to state 46

    num_exp        go to state 96
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51


State 95

   27 loop_statement: _LOOP _LPAREN _ID _COMMA literal _COMMA . literal _COMMA literal _RPAREN $@3 statement

    _INT_NUMBER   shift, and go to state 44
    _UINT_NUMBER  shift, and go to state 45

    literal  go to state 97


State 96

   33 num_exp: num_exp . _AROP exp
   34        | num_exp . _POSTINCREMENT
   45 argument: argument _COMMA num_exp .

    _AROP           shift, and go to state 66
    _POSTINCREMENT  shift, and go to state 67

    $default  reduce using rule 45 (argument)


State 97

   27 loop_statement: _LOOP _LPAREN _ID _COMMA literal _COMMA literal . _COMMA literal _RPAREN $@3 statement

    _COMMA  shift, and go to state 98


State 98

   27 loop_statement: _LOOP _LPAREN _ID _COMMA literal _COMMA literal _COMMA . literal _RPAREN $@3 statement

    _INT_NUMBER   shift, and go to state 44
    _UINT_NUMBER  shift, and go to state 45

    literal  go to state 99


State 99

   27 loop_statement: _LOOP _LPAREN _ID _COMMA literal _COMMA literal _COMMA literal . _RPAREN $@3 statement

    _RPAREN  shift, and go to state 100


State 100

   27 loop_statement: _LOOP _LPAREN _ID _COMMA literal _COMMA literal _COMMA literal _RPAREN . $@3 statement

    $default  reduce using rule 26 ($@3)

    $@3  go to state 101


State 101

   27 loop_statement: _LOOP _LPAREN _ID _COMMA literal _COMMA literal _COMMA literal _RPAREN $@3 . statement

    _IF        shift, and go to state 24
    _RETURN    shift, and go to state 25
    _ID        shift, and go to state 26
    _LBRACKET  shift, and go to state 27
    _WHILE     shift, and go to state 29
    _LOOP      shift, and go to state 30

    statement                go to state 102
    loop_statement           go to state 32
    postincrement_statement  go to state 33
    compound_statement       go to state 34
    assignment_statement     go to state 35
    if_statement             go to state 36
    if_part                  go to state 37
    while_statement          go to state 38
    return_statement         go to state 39


State 102

   27 loop_statement: _LOOP _LPAREN _ID _COMMA literal _COMMA literal _COMMA literal _RPAREN $@3 statement .

    $default  reduce using rule 27 (loop_statement)
