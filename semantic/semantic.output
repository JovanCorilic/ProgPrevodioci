Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 function: _TYPE _ID $@1 _LPAREN parameters _RPAREN body

    6 parameters: parameter
    7           | parameters _COMMA parameter

    8 parameter: %empty
    9          | _TYPE _ID

   10 body: _LBRACKET variable_list statement_list _RBRACKET

   11 variable_list: %empty
   12              | variable_list variable

   13 $@2: %empty

   14 variable: _TYPE $@2 vars _SEMICOLON

   15 vars: _ID
   16     | vars _COMMA _ID

   17 statement_list: %empty
   18               | statement_list statement

   19 statement: compound_statement
   20          | assignment_statement
   21          | if_statement
   22          | return_statement
   23          | postincrement_statement
   24          | while_statement

   25 postincrement_statement: _ID _POSTINCREMENT _SEMICOLON

   26 $@3: %empty

   27 compound_statement: _LBRACKET $@3 variable_list statement_list _RBRACKET

   28 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   29 num_exp: exp
   30        | num_exp _AROP exp
   31        | num_exp _POSTINCREMENT

   32 exp: literal
   33    | _ID
   34    | function_call
   35    | _LPAREN num_exp _RPAREN

   36 literal: _INT_NUMBER
   37        | _UINT_NUMBER

   38 $@4: %empty

   39 function_call: _ID $@4 _LPAREN argument _RPAREN

   40 argument: %empty
   41         | num_exp
   42         | argument _COMMA num_exp

   43 if_statement: if_part
   44             | if_part _ELSE statement

   45 if_part: _IF _LPAREN rel_exp _RPAREN statement

   46 rel_exp: num_exp _RELOP num_exp

   47 while_statement: _WHILE _LPAREN rel_exp _RPAREN statement

   48 return_statement: _RETURN num_exp _SEMICOLON
   49                 | _RETURN _SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 5 9 14
    _IF (259) 45
    _ELSE (260) 44
    _RETURN (261) 48 49
    _ID <s> (262) 5 9 15 16 25 28 33 39
    _INT_NUMBER <s> (263) 36
    _UINT_NUMBER <s> (264) 37
    _LPAREN (265) 5 35 39 45 47
    _RPAREN (266) 5 35 39 45 47
    _LBRACKET (267) 10 27
    _RBRACKET (268) 10 27
    _ASSIGN (269) 28
    _SEMICOLON (270) 14 25 28 48 49
    _AROP <i> (271) 30
    _RELOP <i> (272) 46
    _COMMA (273) 7 16 42
    _POSTINCREMENT <i> (274) 25 31
    _WHILE (275) 47
    ONLY_IF (276)


Nonterminals, with rules where they appear

    $accept (22)
        on left: 0
    program (23)
        on left: 1
        on right: 0
    function_list (24)
        on left: 2 3
        on right: 1 3
    function (25)
        on left: 5
        on right: 2 3
    $@1 (26)
        on left: 4
        on right: 5
    parameters (27)
        on left: 6 7
        on right: 5 7
    parameter (28)
        on left: 8 9
        on right: 6 7
    body (29)
        on left: 10
        on right: 5
    variable_list (30)
        on left: 11 12
        on right: 10 12 27
    variable (31)
        on left: 14
        on right: 12
    $@2 (32)
        on left: 13
        on right: 14
    vars (33)
        on left: 15 16
        on right: 14 16
    statement_list (34)
        on left: 17 18
        on right: 10 18 27
    statement (35)
        on left: 19 20 21 22 23 24
        on right: 18 44 45 47
    postincrement_statement (36)
        on left: 25
        on right: 23
    compound_statement (37)
        on left: 27
        on right: 19
    $@3 (38)
        on left: 26
        on right: 27
    assignment_statement (39)
        on left: 28
        on right: 20
    num_exp <i> (40)
        on left: 29 30 31
        on right: 28 30 31 35 41 42 46 48
    exp <i> (41)
        on left: 32 33 34 35
        on right: 29 30
    literal <i> (42)
        on left: 36 37
        on right: 32
    function_call <i> (43)
        on left: 39
        on right: 34
    $@4 (44)
        on left: 38
        on right: 39
    argument <i> (45)
        on left: 40 41 42
        on right: 39 42
    if_statement (46)
        on left: 43 44
        on right: 21
    if_part (47)
        on left: 45
        on right: 43 44
    rel_exp <i> (48)
        on left: 46
        on right: 45 47
    while_statement (49)
        on left: 47
        on right: 24
    return_statement (50)
        on left: 48 49
        on right: 22


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    5 function: _TYPE . _ID $@1 _LPAREN parameters _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    5 function: _TYPE _ID . $@1 _LPAREN parameters _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    5 function: _TYPE _ID $@1 . _LPAREN parameters _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    5 function: _TYPE _ID $@1 _LPAREN . parameters _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 8 (parameter)

    parameters  go to state 11
    parameter   go to state 12


State 10

    9 parameter: _TYPE . _ID

    _ID  shift, and go to state 13


State 11

    5 function: _TYPE _ID $@1 _LPAREN parameters . _RPAREN body
    7 parameters: parameters . _COMMA parameter

    _RPAREN  shift, and go to state 14
    _COMMA   shift, and go to state 15


State 12

    6 parameters: parameter .

    $default  reduce using rule 6 (parameters)


State 13

    9 parameter: _TYPE _ID .

    $default  reduce using rule 9 (parameter)


State 14

    5 function: _TYPE _ID $@1 _LPAREN parameters _RPAREN . body

    _LBRACKET  shift, and go to state 16

    body  go to state 17


State 15

    7 parameters: parameters _COMMA . parameter

    _TYPE  shift, and go to state 10

    $default  reduce using rule 8 (parameter)

    parameter  go to state 18


State 16

   10 body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 11 (variable_list)

    variable_list  go to state 19


State 17

    5 function: _TYPE _ID $@1 _LPAREN parameters _RPAREN body .

    $default  reduce using rule 5 (function)


State 18

    7 parameters: parameters _COMMA parameter .

    $default  reduce using rule 7 (parameters)


State 19

   10 body: _LBRACKET variable_list . statement_list _RBRACKET
   12 variable_list: variable_list . variable

    _TYPE  shift, and go to state 20

    $default  reduce using rule 17 (statement_list)

    variable        go to state 21
    statement_list  go to state 22


State 20

   14 variable: _TYPE . $@2 vars _SEMICOLON

    $default  reduce using rule 13 ($@2)

    $@2  go to state 23


State 21

   12 variable_list: variable_list variable .

    $default  reduce using rule 12 (variable_list)


State 22

   10 body: _LBRACKET variable_list statement_list . _RBRACKET
   18 statement_list: statement_list . statement

    _IF        shift, and go to state 24
    _RETURN    shift, and go to state 25
    _ID        shift, and go to state 26
    _LBRACKET  shift, and go to state 27
    _RBRACKET  shift, and go to state 28
    _WHILE     shift, and go to state 29

    statement                go to state 30
    postincrement_statement  go to state 31
    compound_statement       go to state 32
    assignment_statement     go to state 33
    if_statement             go to state 34
    if_part                  go to state 35
    while_statement          go to state 36
    return_statement         go to state 37


State 23

   14 variable: _TYPE $@2 . vars _SEMICOLON

    _ID  shift, and go to state 38

    vars  go to state 39


State 24

   45 if_part: _IF . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 40


State 25

   48 return_statement: _RETURN . num_exp _SEMICOLON
   49                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 41
    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43
    _LPAREN       shift, and go to state 44
    _SEMICOLON    shift, and go to state 45

    num_exp        go to state 46
    exp            go to state 47
    literal        go to state 48
    function_call  go to state 49


State 26

   25 postincrement_statement: _ID . _POSTINCREMENT _SEMICOLON
   28 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN         shift, and go to state 50
    _POSTINCREMENT  shift, and go to state 51


State 27

   27 compound_statement: _LBRACKET . $@3 variable_list statement_list _RBRACKET

    $default  reduce using rule 26 ($@3)

    $@3  go to state 52


State 28

   10 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 10 (body)


State 29

   47 while_statement: _WHILE . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 53


State 30

   18 statement_list: statement_list statement .

    $default  reduce using rule 18 (statement_list)


State 31

   23 statement: postincrement_statement .

    $default  reduce using rule 23 (statement)


State 32

   19 statement: compound_statement .

    $default  reduce using rule 19 (statement)


State 33

   20 statement: assignment_statement .

    $default  reduce using rule 20 (statement)


State 34

   21 statement: if_statement .

    $default  reduce using rule 21 (statement)


State 35

   43 if_statement: if_part .
   44             | if_part . _ELSE statement

    _ELSE  shift, and go to state 54

    $default  reduce using rule 43 (if_statement)


State 36

   24 statement: while_statement .

    $default  reduce using rule 24 (statement)


State 37

   22 statement: return_statement .

    $default  reduce using rule 22 (statement)


State 38

   15 vars: _ID .

    $default  reduce using rule 15 (vars)


State 39

   14 variable: _TYPE $@2 vars . _SEMICOLON
   16 vars: vars . _COMMA _ID

    _SEMICOLON  shift, and go to state 55
    _COMMA      shift, and go to state 56


State 40

   45 if_part: _IF _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 41
    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43
    _LPAREN       shift, and go to state 44

    num_exp        go to state 57
    exp            go to state 47
    literal        go to state 48
    function_call  go to state 49
    rel_exp        go to state 58


State 41

   33 exp: _ID .
   39 function_call: _ID . $@4 _LPAREN argument _RPAREN

    _LPAREN   reduce using rule 38 ($@4)
    $default  reduce using rule 33 (exp)

    $@4  go to state 59


State 42

   36 literal: _INT_NUMBER .

    $default  reduce using rule 36 (literal)


State 43

   37 literal: _UINT_NUMBER .

    $default  reduce using rule 37 (literal)


State 44

   35 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 41
    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43
    _LPAREN       shift, and go to state 44

    num_exp        go to state 60
    exp            go to state 47
    literal        go to state 48
    function_call  go to state 49


State 45

   49 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 49 (return_statement)


State 46

   30 num_exp: num_exp . _AROP exp
   31        | num_exp . _POSTINCREMENT
   48 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON      shift, and go to state 61
    _AROP           shift, and go to state 62
    _POSTINCREMENT  shift, and go to state 63


State 47

   29 num_exp: exp .

    $default  reduce using rule 29 (num_exp)


State 48

   32 exp: literal .

    $default  reduce using rule 32 (exp)


State 49

   34 exp: function_call .

    $default  reduce using rule 34 (exp)


State 50

   28 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 41
    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43
    _LPAREN       shift, and go to state 44

    num_exp        go to state 64
    exp            go to state 47
    literal        go to state 48
    function_call  go to state 49


State 51

   25 postincrement_statement: _ID _POSTINCREMENT . _SEMICOLON

    _SEMICOLON  shift, and go to state 65


State 52

   27 compound_statement: _LBRACKET $@3 . variable_list statement_list _RBRACKET

    $default  reduce using rule 11 (variable_list)

    variable_list  go to state 66


State 53

   47 while_statement: _WHILE _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 41
    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43
    _LPAREN       shift, and go to state 44

    num_exp        go to state 57
    exp            go to state 47
    literal        go to state 48
    function_call  go to state 49
    rel_exp        go to state 67


State 54

   44 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 24
    _RETURN    shift, and go to state 25
    _ID        shift, and go to state 26
    _LBRACKET  shift, and go to state 27
    _WHILE     shift, and go to state 29

    statement                go to state 68
    postincrement_statement  go to state 31
    compound_statement       go to state 32
    assignment_statement     go to state 33
    if_statement             go to state 34
    if_part                  go to state 35
    while_statement          go to state 36
    return_statement         go to state 37


State 55

   14 variable: _TYPE $@2 vars _SEMICOLON .

    $default  reduce using rule 14 (variable)


State 56

   16 vars: vars _COMMA . _ID

    _ID  shift, and go to state 69


State 57

   30 num_exp: num_exp . _AROP exp
   31        | num_exp . _POSTINCREMENT
   46 rel_exp: num_exp . _RELOP num_exp

    _AROP           shift, and go to state 62
    _RELOP          shift, and go to state 70
    _POSTINCREMENT  shift, and go to state 63


State 58

   45 if_part: _IF _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 71


State 59

   39 function_call: _ID $@4 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 72


State 60

   30 num_exp: num_exp . _AROP exp
   31        | num_exp . _POSTINCREMENT
   35 exp: _LPAREN num_exp . _RPAREN

    _RPAREN         shift, and go to state 73
    _AROP           shift, and go to state 62
    _POSTINCREMENT  shift, and go to state 63


State 61

   48 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 48 (return_statement)


State 62

   30 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 41
    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43
    _LPAREN       shift, and go to state 44

    exp            go to state 74
    literal        go to state 48
    function_call  go to state 49


State 63

   31 num_exp: num_exp _POSTINCREMENT .

    $default  reduce using rule 31 (num_exp)


State 64

   28 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   30 num_exp: num_exp . _AROP exp
   31        | num_exp . _POSTINCREMENT

    _SEMICOLON      shift, and go to state 75
    _AROP           shift, and go to state 62
    _POSTINCREMENT  shift, and go to state 63


State 65

   25 postincrement_statement: _ID _POSTINCREMENT _SEMICOLON .

    $default  reduce using rule 25 (postincrement_statement)


State 66

   12 variable_list: variable_list . variable
   27 compound_statement: _LBRACKET $@3 variable_list . statement_list _RBRACKET

    _TYPE  shift, and go to state 20

    $default  reduce using rule 17 (statement_list)

    variable        go to state 21
    statement_list  go to state 76


State 67

   47 while_statement: _WHILE _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 77


State 68

   44 if_statement: if_part _ELSE statement .

    $default  reduce using rule 44 (if_statement)


State 69

   16 vars: vars _COMMA _ID .

    $default  reduce using rule 16 (vars)


State 70

   46 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 41
    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43
    _LPAREN       shift, and go to state 44

    num_exp        go to state 78
    exp            go to state 47
    literal        go to state 48
    function_call  go to state 49


State 71

   45 if_part: _IF _LPAREN rel_exp _RPAREN . statement

    _IF        shift, and go to state 24
    _RETURN    shift, and go to state 25
    _ID        shift, and go to state 26
    _LBRACKET  shift, and go to state 27
    _WHILE     shift, and go to state 29

    statement                go to state 79
    postincrement_statement  go to state 31
    compound_statement       go to state 32
    assignment_statement     go to state 33
    if_statement             go to state 34
    if_part                  go to state 35
    while_statement          go to state 36
    return_statement         go to state 37


State 72

   39 function_call: _ID $@4 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 41
    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43
    _LPAREN       shift, and go to state 44

    $default  reduce using rule 40 (argument)

    num_exp        go to state 80
    exp            go to state 47
    literal        go to state 48
    function_call  go to state 49
    argument       go to state 81


State 73

   35 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 35 (exp)


State 74

   30 num_exp: num_exp _AROP exp .

    $default  reduce using rule 30 (num_exp)


State 75

   28 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 28 (assignment_statement)


State 76

   18 statement_list: statement_list . statement
   27 compound_statement: _LBRACKET $@3 variable_list statement_list . _RBRACKET

    _IF        shift, and go to state 24
    _RETURN    shift, and go to state 25
    _ID        shift, and go to state 26
    _LBRACKET  shift, and go to state 27
    _RBRACKET  shift, and go to state 82
    _WHILE     shift, and go to state 29

    statement                go to state 30
    postincrement_statement  go to state 31
    compound_statement       go to state 32
    assignment_statement     go to state 33
    if_statement             go to state 34
    if_part                  go to state 35
    while_statement          go to state 36
    return_statement         go to state 37


State 77

   47 while_statement: _WHILE _LPAREN rel_exp _RPAREN . statement

    _IF        shift, and go to state 24
    _RETURN    shift, and go to state 25
    _ID        shift, and go to state 26
    _LBRACKET  shift, and go to state 27
    _WHILE     shift, and go to state 29

    statement                go to state 83
    postincrement_statement  go to state 31
    compound_statement       go to state 32
    assignment_statement     go to state 33
    if_statement             go to state 34
    if_part                  go to state 35
    while_statement          go to state 36
    return_statement         go to state 37


State 78

   30 num_exp: num_exp . _AROP exp
   31        | num_exp . _POSTINCREMENT
   46 rel_exp: num_exp _RELOP num_exp .

    _AROP           shift, and go to state 62
    _POSTINCREMENT  shift, and go to state 63

    $default  reduce using rule 46 (rel_exp)


State 79

   45 if_part: _IF _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 45 (if_part)


State 80

   30 num_exp: num_exp . _AROP exp
   31        | num_exp . _POSTINCREMENT
   41 argument: num_exp .

    _AROP           shift, and go to state 62
    _POSTINCREMENT  shift, and go to state 63

    $default  reduce using rule 41 (argument)


State 81

   39 function_call: _ID $@4 _LPAREN argument . _RPAREN
   42 argument: argument . _COMMA num_exp

    _RPAREN  shift, and go to state 84
    _COMMA   shift, and go to state 85


State 82

   27 compound_statement: _LBRACKET $@3 variable_list statement_list _RBRACKET .

    $default  reduce using rule 27 (compound_statement)


State 83

   47 while_statement: _WHILE _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 47 (while_statement)


State 84

   39 function_call: _ID $@4 _LPAREN argument _RPAREN .

    $default  reduce using rule 39 (function_call)


State 85

   42 argument: argument _COMMA . num_exp

    _ID           shift, and go to state 41
    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43
    _LPAREN       shift, and go to state 44

    num_exp        go to state 86
    exp            go to state 47
    literal        go to state 48
    function_call  go to state 49


State 86

   30 num_exp: num_exp . _AROP exp
   31        | num_exp . _POSTINCREMENT
   42 argument: argument _COMMA num_exp .

    _AROP           shift, and go to state 62
    _POSTINCREMENT  shift, and go to state 63

    $default  reduce using rule 42 (argument)
