Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 function: _TYPE _ID $@1 _LPAREN sabezParametara _RPAREN body

    6 sabezParametara: %empty
    7                | parameters

    8 parameters: parameter
    9           | parameters _COMMA parameter

   10 parameter: _TYPE _ID

   11 body: _LBRACKET variable_list statement_list _RBRACKET

   12 variable_list: %empty
   13              | variable_list variable

   14 $@2: %empty

   15 variable: _TYPE $@2 vars _SEMICOLON

   16 vars: _ID
   17     | vars _COMMA _ID

   18 statement_list: %empty
   19               | statement_list statement

   20 statement: compound_statement
   21          | assignment_statement
   22          | if_statement
   23          | return_statement
   24          | postincrement_statement
   25          | while_statement
   26          | loop_statement
   27          | branch_statement
   28          | function_statement
   29          | select_statement

   30 $@3: %empty

   31 select_statement: _SELECT multi_vars _FROM _ID $@3 _WHERE _LPAREN logic_rel_exp _RPAREN _SEMICOLON

   32 multi_vars: _ID
   33           | multi_vars _COMMA _ID

   34 $@4: %empty

   35 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@4 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

   36 $@5: %empty

   37 loop_statement: _LOOP _LPAREN _ID _COMMA literal _COMMA literal _COMMA literal _RPAREN $@5 statement

   38 postincrement_statement: _ID _POSTINCREMENT _SEMICOLON

   39 $@6: %empty

   40 compound_statement: _LBRACKET $@6 variable_list statement_list _RBRACKET

   41 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   42 num_exp: exp
   43        | num_exp _AROP exp

   44 exp: literal
   45    | _ID
   46    | function_call
   47    | _LPAREN num_exp _RPAREN
   48    | _ID _POSTINCREMENT

   49 literal: _INT_NUMBER
   50        | _UINT_NUMBER

   51 function_statement: function_call _SEMICOLON

   52 $@7: %empty

   53 function_call: _ID $@7 _LPAREN argument _RPAREN

   54 argument: %empty
   55         | num_exp
   56         | argument _COMMA num_exp

   57 if_statement: if_part
   58             | if_part _ELSE statement

   59 if_part: _IF _LPAREN logic_rel_exp _RPAREN statement

   60 logic_rel_exp: rel_exp
   61              | logic_rel_exp _LOGICOPER rel_exp

   62 rel_exp: num_exp _RELOP num_exp

   63 while_statement: _WHILE _LPAREN logic_rel_exp _RPAREN statement

   64 return_statement: _RETURN num_exp _SEMICOLON
   65                 | _RETURN _SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 5 10 15
    _IF (259) 59
    _ELSE (260) 58
    _RETURN (261) 64 65
    _ID <s> (262) 5 10 16 17 31 32 33 35 37 38 41 45 48 53
    _INT_NUMBER <s> (263) 49
    _UINT_NUMBER <s> (264) 50
    _LPAREN (265) 5 31 37 47 53 59 63
    _RPAREN (266) 5 31 37 47 53 59 63
    _LBRACKET (267) 11 40
    _RBRACKET (268) 11 40
    _ASSIGN (269) 41
    _SEMICOLON (270) 15 31 38 41 51 64 65
    _AROP <i> (271) 43
    _RELOP <i> (272) 62
    _COMMA (273) 9 17 33 37 56
    _POSTINCREMENT <i> (274) 38 48
    _WHILE (275) 63
    _LOGICOPER (276) 61
    _LOOP (277) 37
    _BRANCH (278) 35
    _LSQUAREBRACKET (279) 35
    _RSQUAREBRACKET (280) 35
    _ARROW (281) 35
    _ONE (282) 35
    _TWO (283) 35
    _THREE (284) 35
    _OTHER (285) 35
    _SELECT (286) 31
    _FROM (287) 31
    _WHERE (288) 31
    ONLY_IF (289)


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    program (36)
        on left: 1
        on right: 0
    function_list (37)
        on left: 2 3
        on right: 1 3
    function (38)
        on left: 5
        on right: 2 3
    $@1 (39)
        on left: 4
        on right: 5
    sabezParametara (40)
        on left: 6 7
        on right: 5
    parameters (41)
        on left: 8 9
        on right: 7 9
    parameter (42)
        on left: 10
        on right: 8 9
    body (43)
        on left: 11
        on right: 5
    variable_list (44)
        on left: 12 13
        on right: 11 13 40
    variable (45)
        on left: 15
        on right: 13
    $@2 (46)
        on left: 14
        on right: 15
    vars (47)
        on left: 16 17
        on right: 15 17
    statement_list (48)
        on left: 18 19
        on right: 11 19 40
    statement (49)
        on left: 20 21 22 23 24 25 26 27 28 29
        on right: 19 35 37 58 59 63
    select_statement (50)
        on left: 31
        on right: 29
    $@3 (51)
        on left: 30
        on right: 31
    multi_vars (52)
        on left: 32 33
        on right: 31 33
    branch_statement (53)
        on left: 35
        on right: 27
    $@4 (54)
        on left: 34
        on right: 35
    loop_statement (55)
        on left: 37
        on right: 26
    $@5 (56)
        on left: 36
        on right: 37
    postincrement_statement (57)
        on left: 38
        on right: 24
    compound_statement (58)
        on left: 40
        on right: 20
    $@6 (59)
        on left: 39
        on right: 40
    assignment_statement (60)
        on left: 41
        on right: 21
    num_exp <i> (61)
        on left: 42 43
        on right: 41 43 47 55 56 62 64
    exp <i> (62)
        on left: 44 45 46 47 48
        on right: 42 43
    literal <i> (63)
        on left: 49 50
        on right: 35 37 44
    function_statement (64)
        on left: 51
        on right: 28
    function_call <i> (65)
        on left: 53
        on right: 46 51
    $@7 (66)
        on left: 52
        on right: 53
    argument <i> (67)
        on left: 54 55 56
        on right: 53 56
    if_statement (68)
        on left: 57 58
        on right: 22
    if_part (69)
        on left: 59
        on right: 57 58
    logic_rel_exp (70)
        on left: 60 61
        on right: 31 59 61 63
    rel_exp <i> (71)
        on left: 62
        on right: 60 61
    while_statement (72)
        on left: 63
        on right: 25
    return_statement (73)
        on left: 64 65
        on right: 23


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    5 function: _TYPE . _ID $@1 _LPAREN sabezParametara _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    5 function: _TYPE _ID . $@1 _LPAREN sabezParametara _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    5 function: _TYPE _ID $@1 . _LPAREN sabezParametara _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    5 function: _TYPE _ID $@1 _LPAREN . sabezParametara _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 6 (sabezParametara)

    sabezParametara  go to state 11
    parameters       go to state 12
    parameter        go to state 13


State 10

   10 parameter: _TYPE . _ID

    _ID  shift, and go to state 14


State 11

    5 function: _TYPE _ID $@1 _LPAREN sabezParametara . _RPAREN body

    _RPAREN  shift, and go to state 15


State 12

    7 sabezParametara: parameters .
    9 parameters: parameters . _COMMA parameter

    _COMMA  shift, and go to state 16

    $default  reduce using rule 7 (sabezParametara)


State 13

    8 parameters: parameter .

    $default  reduce using rule 8 (parameters)


State 14

   10 parameter: _TYPE _ID .

    $default  reduce using rule 10 (parameter)


State 15

    5 function: _TYPE _ID $@1 _LPAREN sabezParametara _RPAREN . body

    _LBRACKET  shift, and go to state 17

    body  go to state 18


State 16

    9 parameters: parameters _COMMA . parameter

    _TYPE  shift, and go to state 10

    parameter  go to state 19


State 17

   11 body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 12 (variable_list)

    variable_list  go to state 20


State 18

    5 function: _TYPE _ID $@1 _LPAREN sabezParametara _RPAREN body .

    $default  reduce using rule 5 (function)


State 19

    9 parameters: parameters _COMMA parameter .

    $default  reduce using rule 9 (parameters)


State 20

   11 body: _LBRACKET variable_list . statement_list _RBRACKET
   13 variable_list: variable_list . variable

    _TYPE  shift, and go to state 21

    $default  reduce using rule 18 (statement_list)

    variable        go to state 22
    statement_list  go to state 23


State 21

   15 variable: _TYPE . $@2 vars _SEMICOLON

    $default  reduce using rule 14 ($@2)

    $@2  go to state 24


State 22

   13 variable_list: variable_list variable .

    $default  reduce using rule 13 (variable_list)


State 23

   11 body: _LBRACKET variable_list statement_list . _RBRACKET
   19 statement_list: statement_list . statement

    _IF        shift, and go to state 25
    _RETURN    shift, and go to state 26
    _ID        shift, and go to state 27
    _LBRACKET  shift, and go to state 28
    _RBRACKET  shift, and go to state 29
    _WHILE     shift, and go to state 30
    _LOOP      shift, and go to state 31
    _BRANCH    shift, and go to state 32
    _SELECT    shift, and go to state 33

    statement                go to state 34
    select_statement         go to state 35
    branch_statement         go to state 36
    loop_statement           go to state 37
    postincrement_statement  go to state 38
    compound_statement       go to state 39
    assignment_statement     go to state 40
    function_statement       go to state 41
    function_call            go to state 42
    if_statement             go to state 43
    if_part                  go to state 44
    while_statement          go to state 45
    return_statement         go to state 46


State 24

   15 variable: _TYPE $@2 . vars _SEMICOLON

    _ID  shift, and go to state 47

    vars  go to state 48


State 25

   59 if_part: _IF . _LPAREN logic_rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 49


State 26

   64 return_statement: _RETURN . num_exp _SEMICOLON
   65                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 50
    _INT_NUMBER   shift, and go to state 51
    _UINT_NUMBER  shift, and go to state 52
    _LPAREN       shift, and go to state 53
    _SEMICOLON    shift, and go to state 54

    num_exp        go to state 55
    exp            go to state 56
    literal        go to state 57
    function_call  go to state 58


State 27

   38 postincrement_statement: _ID . _POSTINCREMENT _SEMICOLON
   41 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   53 function_call: _ID . $@7 _LPAREN argument _RPAREN

    _ASSIGN         shift, and go to state 59
    _POSTINCREMENT  shift, and go to state 60

    $default  reduce using rule 52 ($@7)

    $@7  go to state 61


State 28

   40 compound_statement: _LBRACKET . $@6 variable_list statement_list _RBRACKET

    $default  reduce using rule 39 ($@6)

    $@6  go to state 62


State 29

   11 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 11 (body)


State 30

   63 while_statement: _WHILE . _LPAREN logic_rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 63


State 31

   37 loop_statement: _LOOP . _LPAREN _ID _COMMA literal _COMMA literal _COMMA literal _RPAREN $@5 statement

    _LPAREN  shift, and go to state 64


State 32

   35 branch_statement: _BRANCH . _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@4 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _LSQUAREBRACKET  shift, and go to state 65


State 33

   31 select_statement: _SELECT . multi_vars _FROM _ID $@3 _WHERE _LPAREN logic_rel_exp _RPAREN _SEMICOLON

    _ID  shift, and go to state 66

    multi_vars  go to state 67


State 34

   19 statement_list: statement_list statement .

    $default  reduce using rule 19 (statement_list)


State 35

   29 statement: select_statement .

    $default  reduce using rule 29 (statement)


State 36

   27 statement: branch_statement .

    $default  reduce using rule 27 (statement)


State 37

   26 statement: loop_statement .

    $default  reduce using rule 26 (statement)


State 38

   24 statement: postincrement_statement .

    $default  reduce using rule 24 (statement)


State 39

   20 statement: compound_statement .

    $default  reduce using rule 20 (statement)


State 40

   21 statement: assignment_statement .

    $default  reduce using rule 21 (statement)


State 41

   28 statement: function_statement .

    $default  reduce using rule 28 (statement)


State 42

   51 function_statement: function_call . _SEMICOLON

    _SEMICOLON  shift, and go to state 68


State 43

   22 statement: if_statement .

    $default  reduce using rule 22 (statement)


State 44

   57 if_statement: if_part .
   58             | if_part . _ELSE statement

    _ELSE  shift, and go to state 69

    $default  reduce using rule 57 (if_statement)


State 45

   25 statement: while_statement .

    $default  reduce using rule 25 (statement)


State 46

   23 statement: return_statement .

    $default  reduce using rule 23 (statement)


State 47

   16 vars: _ID .

    $default  reduce using rule 16 (vars)


State 48

   15 variable: _TYPE $@2 vars . _SEMICOLON
   17 vars: vars . _COMMA _ID

    _SEMICOLON  shift, and go to state 70
    _COMMA      shift, and go to state 71


State 49

   59 if_part: _IF _LPAREN . logic_rel_exp _RPAREN statement

    _ID           shift, and go to state 50
    _INT_NUMBER   shift, and go to state 51
    _UINT_NUMBER  shift, and go to state 52
    _LPAREN       shift, and go to state 53

    num_exp        go to state 72
    exp            go to state 56
    literal        go to state 57
    function_call  go to state 58
    logic_rel_exp  go to state 73
    rel_exp        go to state 74


State 50

   45 exp: _ID .
   48    | _ID . _POSTINCREMENT
   53 function_call: _ID . $@7 _LPAREN argument _RPAREN

    _POSTINCREMENT  shift, and go to state 75

    _LPAREN   reduce using rule 52 ($@7)
    $default  reduce using rule 45 (exp)

    $@7  go to state 61


State 51

   49 literal: _INT_NUMBER .

    $default  reduce using rule 49 (literal)


State 52

   50 literal: _UINT_NUMBER .

    $default  reduce using rule 50 (literal)


State 53

   47 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 50
    _INT_NUMBER   shift, and go to state 51
    _UINT_NUMBER  shift, and go to state 52
    _LPAREN       shift, and go to state 53

    num_exp        go to state 76
    exp            go to state 56
    literal        go to state 57
    function_call  go to state 58


State 54

   65 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 65 (return_statement)


State 55

   43 num_exp: num_exp . _AROP exp
   64 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 77
    _AROP       shift, and go to state 78


State 56

   42 num_exp: exp .

    $default  reduce using rule 42 (num_exp)


State 57

   44 exp: literal .

    $default  reduce using rule 44 (exp)


State 58

   46 exp: function_call .

    $default  reduce using rule 46 (exp)


State 59

   41 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 50
    _INT_NUMBER   shift, and go to state 51
    _UINT_NUMBER  shift, and go to state 52
    _LPAREN       shift, and go to state 53

    num_exp        go to state 79
    exp            go to state 56
    literal        go to state 57
    function_call  go to state 58


State 60

   38 postincrement_statement: _ID _POSTINCREMENT . _SEMICOLON

    _SEMICOLON  shift, and go to state 80


State 61

   53 function_call: _ID $@7 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 81


State 62

   40 compound_statement: _LBRACKET $@6 . variable_list statement_list _RBRACKET

    $default  reduce using rule 12 (variable_list)

    variable_list  go to state 82


State 63

   63 while_statement: _WHILE _LPAREN . logic_rel_exp _RPAREN statement

    _ID           shift, and go to state 50
    _INT_NUMBER   shift, and go to state 51
    _UINT_NUMBER  shift, and go to state 52
    _LPAREN       shift, and go to state 53

    num_exp        go to state 72
    exp            go to state 56
    literal        go to state 57
    function_call  go to state 58
    logic_rel_exp  go to state 83
    rel_exp        go to state 74


State 64

   37 loop_statement: _LOOP _LPAREN . _ID _COMMA literal _COMMA literal _COMMA literal _RPAREN $@5 statement

    _ID  shift, and go to state 84


State 65

   35 branch_statement: _BRANCH _LSQUAREBRACKET . _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@4 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _ID  shift, and go to state 85


State 66

   32 multi_vars: _ID .

    $default  reduce using rule 32 (multi_vars)


State 67

   31 select_statement: _SELECT multi_vars . _FROM _ID $@3 _WHERE _LPAREN logic_rel_exp _RPAREN _SEMICOLON
   33 multi_vars: multi_vars . _COMMA _ID

    _COMMA  shift, and go to state 86
    _FROM   shift, and go to state 87


State 68

   51 function_statement: function_call _SEMICOLON .

    $default  reduce using rule 51 (function_statement)


State 69

   58 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 25
    _RETURN    shift, and go to state 26
    _ID        shift, and go to state 27
    _LBRACKET  shift, and go to state 28
    _WHILE     shift, and go to state 30
    _LOOP      shift, and go to state 31
    _BRANCH    shift, and go to state 32
    _SELECT    shift, and go to state 33

    statement                go to state 88
    select_statement         go to state 35
    branch_statement         go to state 36
    loop_statement           go to state 37
    postincrement_statement  go to state 38
    compound_statement       go to state 39
    assignment_statement     go to state 40
    function_statement       go to state 41
    function_call            go to state 42
    if_statement             go to state 43
    if_part                  go to state 44
    while_statement          go to state 45
    return_statement         go to state 46


State 70

   15 variable: _TYPE $@2 vars _SEMICOLON .

    $default  reduce using rule 15 (variable)


State 71

   17 vars: vars _COMMA . _ID

    _ID  shift, and go to state 89


State 72

   43 num_exp: num_exp . _AROP exp
   62 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 78
    _RELOP  shift, and go to state 90


State 73

   59 if_part: _IF _LPAREN logic_rel_exp . _RPAREN statement
   61 logic_rel_exp: logic_rel_exp . _LOGICOPER rel_exp

    _RPAREN     shift, and go to state 91
    _LOGICOPER  shift, and go to state 92


State 74

   60 logic_rel_exp: rel_exp .

    $default  reduce using rule 60 (logic_rel_exp)


State 75

   48 exp: _ID _POSTINCREMENT .

    $default  reduce using rule 48 (exp)


State 76

   43 num_exp: num_exp . _AROP exp
   47 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 93
    _AROP    shift, and go to state 78


State 77

   64 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 64 (return_statement)


State 78

   43 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 50
    _INT_NUMBER   shift, and go to state 51
    _UINT_NUMBER  shift, and go to state 52
    _LPAREN       shift, and go to state 53

    exp            go to state 94
    literal        go to state 57
    function_call  go to state 58


State 79

   41 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   43 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 95
    _AROP       shift, and go to state 78


State 80

   38 postincrement_statement: _ID _POSTINCREMENT _SEMICOLON .

    $default  reduce using rule 38 (postincrement_statement)


State 81

   53 function_call: _ID $@7 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 50
    _INT_NUMBER   shift, and go to state 51
    _UINT_NUMBER  shift, and go to state 52
    _LPAREN       shift, and go to state 53

    $default  reduce using rule 54 (argument)

    num_exp        go to state 96
    exp            go to state 56
    literal        go to state 57
    function_call  go to state 58
    argument       go to state 97


State 82

   13 variable_list: variable_list . variable
   40 compound_statement: _LBRACKET $@6 variable_list . statement_list _RBRACKET

    _TYPE  shift, and go to state 21

    $default  reduce using rule 18 (statement_list)

    variable        go to state 22
    statement_list  go to state 98


State 83

   61 logic_rel_exp: logic_rel_exp . _LOGICOPER rel_exp
   63 while_statement: _WHILE _LPAREN logic_rel_exp . _RPAREN statement

    _RPAREN     shift, and go to state 99
    _LOGICOPER  shift, and go to state 92


State 84

   37 loop_statement: _LOOP _LPAREN _ID . _COMMA literal _COMMA literal _COMMA literal _RPAREN $@5 statement

    _COMMA  shift, and go to state 100


State 85

   35 branch_statement: _BRANCH _LSQUAREBRACKET _ID . _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@4 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _ARROW  shift, and go to state 101


State 86

   33 multi_vars: multi_vars _COMMA . _ID

    _ID  shift, and go to state 102


State 87

   31 select_statement: _SELECT multi_vars _FROM . _ID $@3 _WHERE _LPAREN logic_rel_exp _RPAREN _SEMICOLON

    _ID  shift, and go to state 103


State 88

   58 if_statement: if_part _ELSE statement .

    $default  reduce using rule 58 (if_statement)


State 89

   17 vars: vars _COMMA _ID .

    $default  reduce using rule 17 (vars)


State 90

   62 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 50
    _INT_NUMBER   shift, and go to state 51
    _UINT_NUMBER  shift, and go to state 52
    _LPAREN       shift, and go to state 53

    num_exp        go to state 104
    exp            go to state 56
    literal        go to state 57
    function_call  go to state 58


State 91

   59 if_part: _IF _LPAREN logic_rel_exp _RPAREN . statement

    _IF        shift, and go to state 25
    _RETURN    shift, and go to state 26
    _ID        shift, and go to state 27
    _LBRACKET  shift, and go to state 28
    _WHILE     shift, and go to state 30
    _LOOP      shift, and go to state 31
    _BRANCH    shift, and go to state 32
    _SELECT    shift, and go to state 33

    statement                go to state 105
    select_statement         go to state 35
    branch_statement         go to state 36
    loop_statement           go to state 37
    postincrement_statement  go to state 38
    compound_statement       go to state 39
    assignment_statement     go to state 40
    function_statement       go to state 41
    function_call            go to state 42
    if_statement             go to state 43
    if_part                  go to state 44
    while_statement          go to state 45
    return_statement         go to state 46


State 92

   61 logic_rel_exp: logic_rel_exp _LOGICOPER . rel_exp

    _ID           shift, and go to state 50
    _INT_NUMBER   shift, and go to state 51
    _UINT_NUMBER  shift, and go to state 52
    _LPAREN       shift, and go to state 53

    num_exp        go to state 72
    exp            go to state 56
    literal        go to state 57
    function_call  go to state 58
    rel_exp        go to state 106


State 93

   47 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 47 (exp)


State 94

   43 num_exp: num_exp _AROP exp .

    $default  reduce using rule 43 (num_exp)


State 95

   41 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 41 (assignment_statement)


State 96

   43 num_exp: num_exp . _AROP exp
   55 argument: num_exp .

    _AROP  shift, and go to state 78

    $default  reduce using rule 55 (argument)


State 97

   53 function_call: _ID $@7 _LPAREN argument . _RPAREN
   56 argument: argument . _COMMA num_exp

    _RPAREN  shift, and go to state 107
    _COMMA   shift, and go to state 108


State 98

   19 statement_list: statement_list . statement
   40 compound_statement: _LBRACKET $@6 variable_list statement_list . _RBRACKET

    _IF        shift, and go to state 25
    _RETURN    shift, and go to state 26
    _ID        shift, and go to state 27
    _LBRACKET  shift, and go to state 28
    _RBRACKET  shift, and go to state 109
    _WHILE     shift, and go to state 30
    _LOOP      shift, and go to state 31
    _BRANCH    shift, and go to state 32
    _SELECT    shift, and go to state 33

    statement                go to state 34
    select_statement         go to state 35
    branch_statement         go to state 36
    loop_statement           go to state 37
    postincrement_statement  go to state 38
    compound_statement       go to state 39
    assignment_statement     go to state 40
    function_statement       go to state 41
    function_call            go to state 42
    if_statement             go to state 43
    if_part                  go to state 44
    while_statement          go to state 45
    return_statement         go to state 46


State 99

   63 while_statement: _WHILE _LPAREN logic_rel_exp _RPAREN . statement

    _IF        shift, and go to state 25
    _RETURN    shift, and go to state 26
    _ID        shift, and go to state 27
    _LBRACKET  shift, and go to state 28
    _WHILE     shift, and go to state 30
    _LOOP      shift, and go to state 31
    _BRANCH    shift, and go to state 32
    _SELECT    shift, and go to state 33

    statement                go to state 110
    select_statement         go to state 35
    branch_statement         go to state 36
    loop_statement           go to state 37
    postincrement_statement  go to state 38
    compound_statement       go to state 39
    assignment_statement     go to state 40
    function_statement       go to state 41
    function_call            go to state 42
    if_statement             go to state 43
    if_part                  go to state 44
    while_statement          go to state 45
    return_statement         go to state 46


State 100

   37 loop_statement: _LOOP _LPAREN _ID _COMMA . literal _COMMA literal _COMMA literal _RPAREN $@5 statement

    _INT_NUMBER   shift, and go to state 51
    _UINT_NUMBER  shift, and go to state 52

    literal  go to state 111


State 101

   35 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW . literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@4 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _INT_NUMBER   shift, and go to state 51
    _UINT_NUMBER  shift, and go to state 52

    literal  go to state 112


State 102

   33 multi_vars: multi_vars _COMMA _ID .

    $default  reduce using rule 33 (multi_vars)


State 103

   31 select_statement: _SELECT multi_vars _FROM _ID . $@3 _WHERE _LPAREN logic_rel_exp _RPAREN _SEMICOLON

    $default  reduce using rule 30 ($@3)

    $@3  go to state 113


State 104

   43 num_exp: num_exp . _AROP exp
   62 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 78

    $default  reduce using rule 62 (rel_exp)


State 105

   59 if_part: _IF _LPAREN logic_rel_exp _RPAREN statement .

    $default  reduce using rule 59 (if_part)


State 106

   61 logic_rel_exp: logic_rel_exp _LOGICOPER rel_exp .

    $default  reduce using rule 61 (logic_rel_exp)


State 107

   53 function_call: _ID $@7 _LPAREN argument _RPAREN .

    $default  reduce using rule 53 (function_call)


State 108

   56 argument: argument _COMMA . num_exp

    _ID           shift, and go to state 50
    _INT_NUMBER   shift, and go to state 51
    _UINT_NUMBER  shift, and go to state 52
    _LPAREN       shift, and go to state 53

    num_exp        go to state 114
    exp            go to state 56
    literal        go to state 57
    function_call  go to state 58


State 109

   40 compound_statement: _LBRACKET $@6 variable_list statement_list _RBRACKET .

    $default  reduce using rule 40 (compound_statement)


State 110

   63 while_statement: _WHILE _LPAREN logic_rel_exp _RPAREN statement .

    $default  reduce using rule 63 (while_statement)


State 111

   37 loop_statement: _LOOP _LPAREN _ID _COMMA literal . _COMMA literal _COMMA literal _RPAREN $@5 statement

    _COMMA  shift, and go to state 115


State 112

   35 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal . _ARROW literal _ARROW literal _RSQUAREBRACKET $@4 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _ARROW  shift, and go to state 116


State 113

   31 select_statement: _SELECT multi_vars _FROM _ID $@3 . _WHERE _LPAREN logic_rel_exp _RPAREN _SEMICOLON

    _WHERE  shift, and go to state 117


State 114

   43 num_exp: num_exp . _AROP exp
   56 argument: argument _COMMA num_exp .

    _AROP  shift, and go to state 78

    $default  reduce using rule 56 (argument)


State 115

   37 loop_statement: _LOOP _LPAREN _ID _COMMA literal _COMMA . literal _COMMA literal _RPAREN $@5 statement

    _INT_NUMBER   shift, and go to state 51
    _UINT_NUMBER  shift, and go to state 52

    literal  go to state 118


State 116

   35 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW . literal _ARROW literal _RSQUAREBRACKET $@4 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _INT_NUMBER   shift, and go to state 51
    _UINT_NUMBER  shift, and go to state 52

    literal  go to state 119


State 117

   31 select_statement: _SELECT multi_vars _FROM _ID $@3 _WHERE . _LPAREN logic_rel_exp _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 120


State 118

   37 loop_statement: _LOOP _LPAREN _ID _COMMA literal _COMMA literal . _COMMA literal _RPAREN $@5 statement

    _COMMA  shift, and go to state 121


State 119

   35 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal . _ARROW literal _RSQUAREBRACKET $@4 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _ARROW  shift, and go to state 122


State 120

   31 select_statement: _SELECT multi_vars _FROM _ID $@3 _WHERE _LPAREN . logic_rel_exp _RPAREN _SEMICOLON

    _ID           shift, and go to state 50
    _INT_NUMBER   shift, and go to state 51
    _UINT_NUMBER  shift, and go to state 52
    _LPAREN       shift, and go to state 53

    num_exp        go to state 72
    exp            go to state 56
    literal        go to state 57
    function_call  go to state 58
    logic_rel_exp  go to state 123
    rel_exp        go to state 74


State 121

   37 loop_statement: _LOOP _LPAREN _ID _COMMA literal _COMMA literal _COMMA . literal _RPAREN $@5 statement

    _INT_NUMBER   shift, and go to state 51
    _UINT_NUMBER  shift, and go to state 52

    literal  go to state 124


State 122

   35 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW . literal _RSQUAREBRACKET $@4 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _INT_NUMBER   shift, and go to state 51
    _UINT_NUMBER  shift, and go to state 52

    literal  go to state 125


State 123

   31 select_statement: _SELECT multi_vars _FROM _ID $@3 _WHERE _LPAREN logic_rel_exp . _RPAREN _SEMICOLON
   61 logic_rel_exp: logic_rel_exp . _LOGICOPER rel_exp

    _RPAREN     shift, and go to state 126
    _LOGICOPER  shift, and go to state 92


State 124

   37 loop_statement: _LOOP _LPAREN _ID _COMMA literal _COMMA literal _COMMA literal . _RPAREN $@5 statement

    _RPAREN  shift, and go to state 127


State 125

   35 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal . _RSQUAREBRACKET $@4 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _RSQUAREBRACKET  shift, and go to state 128


State 126

   31 select_statement: _SELECT multi_vars _FROM _ID $@3 _WHERE _LPAREN logic_rel_exp _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 129


State 127

   37 loop_statement: _LOOP _LPAREN _ID _COMMA literal _COMMA literal _COMMA literal _RPAREN . $@5 statement

    $default  reduce using rule 36 ($@5)

    $@5  go to state 130


State 128

   35 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET . $@4 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    $default  reduce using rule 34 ($@4)

    $@4  go to state 131


State 129

   31 select_statement: _SELECT multi_vars _FROM _ID $@3 _WHERE _LPAREN logic_rel_exp _RPAREN _SEMICOLON .

    $default  reduce using rule 31 (select_statement)


State 130

   37 loop_statement: _LOOP _LPAREN _ID _COMMA literal _COMMA literal _COMMA literal _RPAREN $@5 . statement

    _IF        shift, and go to state 25
    _RETURN    shift, and go to state 26
    _ID        shift, and go to state 27
    _LBRACKET  shift, and go to state 28
    _WHILE     shift, and go to state 30
    _LOOP      shift, and go to state 31
    _BRANCH    shift, and go to state 32
    _SELECT    shift, and go to state 33

    statement                go to state 132
    select_statement         go to state 35
    branch_statement         go to state 36
    loop_statement           go to state 37
    postincrement_statement  go to state 38
    compound_statement       go to state 39
    assignment_statement     go to state 40
    function_statement       go to state 41
    function_call            go to state 42
    if_statement             go to state 43
    if_part                  go to state 44
    while_statement          go to state 45
    return_statement         go to state 46


State 131

   35 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@4 . _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _ONE  shift, and go to state 133


State 132

   37 loop_statement: _LOOP _LPAREN _ID _COMMA literal _COMMA literal _COMMA literal _RPAREN $@5 statement .

    $default  reduce using rule 37 (loop_statement)


State 133

   35 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@4 _ONE . _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _ARROW  shift, and go to state 134


State 134

   35 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@4 _ONE _ARROW . statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _IF        shift, and go to state 25
    _RETURN    shift, and go to state 26
    _ID        shift, and go to state 27
    _LBRACKET  shift, and go to state 28
    _WHILE     shift, and go to state 30
    _LOOP      shift, and go to state 31
    _BRANCH    shift, and go to state 32
    _SELECT    shift, and go to state 33

    statement                go to state 135
    select_statement         go to state 35
    branch_statement         go to state 36
    loop_statement           go to state 37
    postincrement_statement  go to state 38
    compound_statement       go to state 39
    assignment_statement     go to state 40
    function_statement       go to state 41
    function_call            go to state 42
    if_statement             go to state 43
    if_part                  go to state 44
    while_statement          go to state 45
    return_statement         go to state 46


State 135

   35 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@4 _ONE _ARROW statement . _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _TWO  shift, and go to state 136


State 136

   35 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@4 _ONE _ARROW statement _TWO . _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement

    _ARROW  shift, and go to state 137


State 137

   35 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@4 _ONE _ARROW statement _TWO _ARROW . statement _THREE _ARROW statement _OTHER _ARROW statement

    _IF        shift, and go to state 25
    _RETURN    shift, and go to state 26
    _ID        shift, and go to state 27
    _LBRACKET  shift, and go to state 28
    _WHILE     shift, and go to state 30
    _LOOP      shift, and go to state 31
    _BRANCH    shift, and go to state 32
    _SELECT    shift, and go to state 33

    statement                go to state 138
    select_statement         go to state 35
    branch_statement         go to state 36
    loop_statement           go to state 37
    postincrement_statement  go to state 38
    compound_statement       go to state 39
    assignment_statement     go to state 40
    function_statement       go to state 41
    function_call            go to state 42
    if_statement             go to state 43
    if_part                  go to state 44
    while_statement          go to state 45
    return_statement         go to state 46


State 138

   35 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@4 _ONE _ARROW statement _TWO _ARROW statement . _THREE _ARROW statement _OTHER _ARROW statement

    _THREE  shift, and go to state 139


State 139

   35 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@4 _ONE _ARROW statement _TWO _ARROW statement _THREE . _ARROW statement _OTHER _ARROW statement

    _ARROW  shift, and go to state 140


State 140

   35 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@4 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW . statement _OTHER _ARROW statement

    _IF        shift, and go to state 25
    _RETURN    shift, and go to state 26
    _ID        shift, and go to state 27
    _LBRACKET  shift, and go to state 28
    _WHILE     shift, and go to state 30
    _LOOP      shift, and go to state 31
    _BRANCH    shift, and go to state 32
    _SELECT    shift, and go to state 33

    statement                go to state 141
    select_statement         go to state 35
    branch_statement         go to state 36
    loop_statement           go to state 37
    postincrement_statement  go to state 38
    compound_statement       go to state 39
    assignment_statement     go to state 40
    function_statement       go to state 41
    function_call            go to state 42
    if_statement             go to state 43
    if_part                  go to state 44
    while_statement          go to state 45
    return_statement         go to state 46


State 141

   35 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@4 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement . _OTHER _ARROW statement

    _OTHER  shift, and go to state 142


State 142

   35 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@4 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER . _ARROW statement

    _ARROW  shift, and go to state 143


State 143

   35 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@4 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW . statement

    _IF        shift, and go to state 25
    _RETURN    shift, and go to state 26
    _ID        shift, and go to state 27
    _LBRACKET  shift, and go to state 28
    _WHILE     shift, and go to state 30
    _LOOP      shift, and go to state 31
    _BRANCH    shift, and go to state 32
    _SELECT    shift, and go to state 33

    statement                go to state 144
    select_statement         go to state 35
    branch_statement         go to state 36
    loop_statement           go to state 37
    postincrement_statement  go to state 38
    compound_statement       go to state 39
    assignment_statement     go to state 40
    function_statement       go to state 41
    function_call            go to state 42
    if_statement             go to state 43
    if_part                  go to state 44
    while_statement          go to state 45
    return_statement         go to state 46


State 144

   35 branch_statement: _BRANCH _LSQUAREBRACKET _ID _ARROW literal _ARROW literal _ARROW literal _RSQUAREBRACKET $@4 _ONE _ARROW statement _TWO _ARROW statement _THREE _ARROW statement _OTHER _ARROW statement .

    $default  reduce using rule 35 (branch_statement)
